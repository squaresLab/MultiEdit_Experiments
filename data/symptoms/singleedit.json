{
   "CHART:006": {
      " org.jfree.chart.util.junit.ShapeListTests": [
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError"
      ]
   },
   "CHART:010": {
      " org.jfree.chart.imagemap.junit.StandardToolTipTagFragmentGeneratorTests": [
         "junit.framework.ComparisonFailure"
      ]
   },
   "CHART:009": {
      " org.jfree.data.time.junit.TimeSeriesTests": [
         "java.lang.IllegalArgumentException"
      ]
   },
   "CHART:008": {
      " org.jfree.data.time.junit.WeekTests": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "CHART:003": {
      " org.jfree.data.time.junit.TimeSeriesTests": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "CHART:004": {
      " org.jfree.chart.axis.junit.LogAxisTests": [
         "java.lang.NullPointerException",
         "java.lang.NullPointerException"
      ],
      " org.jfree.chart.axis.junit.NumberAxisTests": [
         "java.lang.NullPointerException",
         "java.lang.NullPointerException"
      ],
      " org.jfree.chart.axis.junit.ValueAxisTests": [
         "java.lang.NullPointerException"
      ],
      " org.jfree.chart.junit.JFreeChartTests": [
         "java.lang.NullPointerException"
      ],
      " org.jfree.chart.junit.ScatterPlotTests": [
         "java.lang.NullPointerException",
         "java.lang.NullPointerException",
         "java.lang.NullPointerException"
      ],
      " org.jfree.chart.junit.TimeSeriesChartTests": [
         "java.lang.NullPointerException",
         "java.lang.NullPointerException",
         "java.lang.NullPointerException"
      ],
      " org.jfree.chart.junit.XYAreaChartTests": [
         "java.lang.NullPointerException",
         "java.lang.NullPointerException",
         "java.lang.NullPointerException"
      ],
      " org.jfree.chart.junit.XYStepAreaChartTests": [
         "java.lang.NullPointerException",
         "java.lang.NullPointerException",
         "java.lang.NullPointerException"
      ],
      " org.jfree.chart.junit.XYStepChartTests": [
         "java.lang.NullPointerException",
         "java.lang.NullPointerException",
         "java.lang.NullPointerException"
      ],
      " org.jfree.chart.plot.junit.XYPlotTests": [
         "java.lang.NullPointerException"
      ]
   },
   "CHART:001": {
      " org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "CHART:012": {
      " org.jfree.chart.plot.junit.MultiplePiePlotTests": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "CHART:011": {
      " org.jfree.chart.util.junit.ShapeUtilitiesTests": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "CHART:013": {
      " org.jfree.chart.block.junit.BorderArrangementTests": [
         "java.lang.IllegalArgumentException"
      ]
   },
   "CHART:017": {
      " org.jfree.data.time.junit.TimeSeriesTests": [
         "java.lang.IllegalArgumentException"
      ]
   },
   "CHART:020": {
      " org.jfree.chart.plot.junit.ValueMarkerTests": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "CHART:026": {
      " org.jfree.chart.junit.AreaChartTests": [
         "junit.framework.AssertionFailedError"
      ],
      " org.jfree.chart.junit.BarChart3DTests": [
         "junit.framework.AssertionFailedError"
      ],
      " org.jfree.chart.junit.BarChartTests": [
         "junit.framework.AssertionFailedError"
      ],
      " org.jfree.chart.junit.GanttChartTests": [
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError"
      ],
      " org.jfree.chart.junit.LineChart3DTests": [
         "junit.framework.AssertionFailedError"
      ],
      " org.jfree.chart.junit.LineChartTests": [
         "junit.framework.AssertionFailedError"
      ],
      " org.jfree.chart.junit.StackedAreaChartTests": [
         "junit.framework.AssertionFailedError"
      ],
      " org.jfree.chart.junit.StackedBarChart3DTests": [
         "junit.framework.AssertionFailedError"
      ],
      " org.jfree.chart.junit.StackedBarChartTests": [
         "junit.framework.AssertionFailedError"
      ],
      " org.jfree.chart.junit.WaterfallChartTests": [
         "junit.framework.AssertionFailedError"
      ],
      " org.jfree.chart.plot.junit.CategoryPlotTests": [
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError"
      ],
      " org.jfree.chart.renderer.category.junit.BoxAndWhiskerRendererTests": [
         "junit.framework.AssertionFailedError"
      ],
      " org.jfree.chart.renderer.category.junit.GroupedStackedBarRendererTests": [
         "junit.framework.AssertionFailedError"
      ],
      " org.jfree.chart.renderer.category.junit.IntervalBarRendererTests": [
         "junit.framework.AssertionFailedError"
      ],
      " org.jfree.chart.renderer.category.junit.LayeredBarRendererTests": [
         "junit.framework.AssertionFailedError"
      ],
      " org.jfree.chart.renderer.category.junit.LevelRendererTests": [
         "junit.framework.AssertionFailedError"
      ],
      " org.jfree.chart.renderer.category.junit.MinMaxCategoryRendererTests": [
         "junit.framework.AssertionFailedError"
      ],
      " org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests": [
         "junit.framework.AssertionFailedError"
      ],
      " org.jfree.chart.renderer.category.junit.StatisticalLineAndShapeRendererTests": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "CHART:023": {
      " org.jfree.chart.renderer.category.junit.MinMaxCategoryRendererTests": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "CHART:024": {
      " org.jfree.chart.renderer.junit.GrayPaintScaleTests": [
         "java.lang.IllegalArgumentException"
      ]
   },
   "CLOSURE:003": {
      " com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest": [
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:007": {
      " com.google.javascript.jscomp.ClosureReverseAbstractInterpreterTest": [
         "junit.framework.AssertionFailedError"
      ],
      " com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:005": {
      " com.google.javascript.jscomp.InlineObjectLiteralsTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:006": {
      " com.google.javascript.jscomp.LooseTypeCheckTest": [
         "junit.framework.AssertionFailedError"
      ],
      " com.google.javascript.jscomp.TypeCheckTest": [
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:002": {
      " com.google.javascript.jscomp.TypeCheckTest": [
         "java.lang.NullPointerException"
      ]
   },
   "CLOSURE:001": {
      " com.google.javascript.jscomp.CommandLineRunnerTest": [
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError"
      ],
      " com.google.javascript.jscomp.IntegrationTest": [
         "junit.framework.AssertionFailedError"
      ],
      " com.google.javascript.jscomp.RemoveUnusedVarsTest": [
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:004": {
      " com.google.javascript.jscomp.TypeCheckTest": [
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "java.lang.StackOverflowError"
      ]
   },
   "CLOSURE:008": {
      " com.google.javascript.jscomp.CollapseVariableDeclarationsTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:009": {
      " com.google.javascript.jscomp.ProcessCommonJSModulesTest": [
         "junit.framework.ComparisonFailure"
      ]
   },
   "CLOSURE:011": {
      " com.google.javascript.jscomp.TypeCheckTest": [
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:012": {
      " com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:010": {
      " com.google.javascript.jscomp.PeepholeFoldConstantsTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:014": {
      " com.google.javascript.jscomp.CheckMissingReturnTest": [
         "junit.framework.AssertionFailedError"
      ],
      " com.google.javascript.jscomp.ControlFlowAnalysisTest": [
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:017": {
      " com.google.javascript.jscomp.TypeCheckTest": [
         "junit.framework.ComparisonFailure"
      ]
   },
   "CLOSURE:013": {
      " com.google.javascript.jscomp.IntegrationTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:021": {
      " com.google.javascript.jscomp.CheckSideEffectsTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:015": {
      " com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:016": {
      " com.google.javascript.jscomp.IntegrationTest": [
         "junit.framework.AssertionFailedError"
      ],
      " com.google.javascript.jscomp.ScopedAliasesTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:018": {
      " com.google.javascript.jscomp.IntegrationTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:020": {
      " com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:019": {
      " com.google.javascript.jscomp.TypeInferenceTest": [
         "java.lang.IllegalArgumentException"
      ]
   },
   "CLOSURE:023": {
      " com.google.javascript.jscomp.PeepholeFoldConstantsTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:024": {
      " com.google.javascript.jscomp.ScopedAliasesTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:022": {
      " com.google.javascript.jscomp.CheckSideEffectsTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:026": {
      " com.google.javascript.jscomp.CommandLineRunnerTest": [
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError"
      ],
      " com.google.javascript.jscomp.ProcessCommonJSModulesTest": [
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:025": {
      " com.google.javascript.jscomp.TypeInferenceTest": [
         "junit.framework.ComparisonFailure"
      ]
   },
   "CLOSURE:027": {
      " com.google.javascript.rhino.IRTest": [
         "java.lang.IllegalStateException",
         "java.lang.IllegalStateException",
         "java.lang.IllegalStateException"
      ]
   },
   "CLOSURE:029": {
      " com.google.javascript.jscomp.InlineObjectLiteralsTest": [
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError"
      ],
      " com.google.javascript.jscomp.IntegrationTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:030": {
      " com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest": [
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:031": {
      " com.google.javascript.jscomp.CommandLineRunnerTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:032": {
      " com.google.javascript.jscomp.IntegrationTest": [
         "junit.framework.ComparisonFailure"
      ],
      " com.google.javascript.jscomp.parsing.JsDocInfoParserTest": [
         "junit.framework.ComparisonFailure",
         "junit.framework.ComparisonFailure",
         "junit.framework.ComparisonFailure"
      ]
   },
   "CLOSURE:033": {
      " com.google.javascript.jscomp.TypeCheckTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:028": {
      " com.google.javascript.jscomp.InlineCostEstimatorTest": [
         "junit.framework.AssertionFailedError"
      ],
      " com.google.javascript.jscomp.InlineFunctionsTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:034": {
      " com.google.javascript.jscomp.CodePrinterTest": [
         "java.lang.StackOverflowError"
      ]
   },
   "CLOSURE:035": {
      " com.google.javascript.jscomp.TypeCheckTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:037": {
      " com.google.javascript.jscomp.IntegrationTest": [
         "java.lang.RuntimeException"
      ]
   },
   "CLOSURE:036": {
      " com.google.javascript.jscomp.IntegrationTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:039": {
      " com.google.javascript.rhino.jstype.RecordTypeTest": [
         "junit.framework.ComparisonFailure",
         "junit.framework.ComparisonFailure"
      ]
   },
   "CLOSURE:045": {
      " com.google.javascript.jscomp.RemoveUnusedVarsTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:038": {
      " com.google.javascript.jscomp.CodePrinterTest": [
         "junit.framework.ComparisonFailure"
      ]
   },
   "CLOSURE:040": {
      " com.google.javascript.jscomp.IntegrationTest": [
         "java.lang.RuntimeException"
      ],
      " com.google.javascript.jscomp.NameAnalyzerTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:042": {
      " com.google.javascript.jscomp.parsing.ParserTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:041": {
      " com.google.javascript.jscomp.LooseTypeCheckTest": [
         "junit.framework.AssertionFailedError"
      ],
      " com.google.javascript.jscomp.TypeCheckTest": [
         "junit.framework.ComparisonFailure",
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:044": {
      " com.google.javascript.jscomp.CodePrinterTest": [
         "junit.framework.ComparisonFailure"
      ]
   },
   "CLOSURE:043": {
      " com.google.javascript.jscomp.TypeCheckTest": [
         "junit.framework.ComparisonFailure",
         "junit.framework.ComparisonFailure"
      ]
   },
   "CLOSURE:046": {
      " com.google.javascript.rhino.jstype.JSTypeTest": [
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError"
      ],
      " com.google.javascript.rhino.jstype.RecordTypeTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:047": {
      " com.google.debugging.sourcemap.SourceMapGeneratorV3Test": [
         "junit.framework.AssertionFailedError",
         "junit.framework.ComparisonFailure",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.ComparisonFailure",
         "junit.framework.AssertionFailedError",
         "junit.framework.ComparisonFailure",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.ComparisonFailure",
         "junit.framework.ComparisonFailure",
         "junit.framework.ComparisonFailure",
         "junit.framework.ComparisonFailure",
         "junit.framework.ComparisonFailure"
      ]
   },
   "CLOSURE:048": {
      " com.google.javascript.jscomp.TypeCheckTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:049": {
      " com.google.javascript.jscomp.FunctionInjectorTest": [
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError"
      ],
      " com.google.javascript.jscomp.FunctionToBlockMutatorTest": [
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError"
      ],
      " com.google.javascript.jscomp.InlineFunctionsTest": [
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError"
      ],
      " com.google.javascript.jscomp.MakeDeclaredNamesUniqueTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:050": {
      " com.google.javascript.jscomp.PeepholeReplaceKnownMethodsTest": [
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:053": {
      " com.google.javascript.jscomp.InlineObjectLiteralsTest": [
         "java.lang.RuntimeException"
      ]
   },
   "CLOSURE:051": {
      " com.google.javascript.jscomp.CodePrinterTest": [
         "junit.framework.ComparisonFailure"
      ]
   },
   "CLOSURE:052": {
      " com.google.javascript.jscomp.CodePrinterTest": [
         "junit.framework.ComparisonFailure"
      ]
   },
   "CLOSURE:059": {
      " com.google.javascript.jscomp.CommandLineRunnerTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:055": {
      " com.google.javascript.jscomp.FunctionRewriterTest": [
         "java.lang.IllegalStateException"
      ]
   },
   "CLOSURE:054": {
      " com.google.javascript.jscomp.TypeCheckTest": [
         "junit.framework.ComparisonFailure",
         "junit.framework.ComparisonFailure"
      ],
      " com.google.javascript.jscomp.TypedScopeCreatorTest": [
         "junit.framework.ComparisonFailure"
      ]
   },
   "CLOSURE:056": {
      " com.google.javascript.jscomp.JSCompilerSourceExcerptProviderTest": [
         "junit.framework.ComparisonFailure"
      ],
      " com.google.javascript.jscomp.JsMessageExtractorTest": [
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:058": {
      " com.google.javascript.jscomp.LiveVariableAnalysisTest": [
         "java.lang.IllegalStateException"
      ]
   },
   "CLOSURE:057": {
      " com.google.javascript.jscomp.ClosureCodingConventionTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:062": {
      " com.google.javascript.jscomp.LightweightMessageFormatterTest": [
         "junit.framework.ComparisonFailure",
         "junit.framework.ComparisonFailure"
      ]
   },
   "CLOSURE:060": {
      " com.google.javascript.jscomp.CommandLineRunnerTest": [
         "junit.framework.AssertionFailedError"
      ],
      " com.google.javascript.jscomp.NodeUtilTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:063": {
      " com.google.javascript.jscomp.LightweightMessageFormatterTest": [
         "junit.framework.ComparisonFailure",
         "junit.framework.ComparisonFailure"
      ]
   },
   "CLOSURE:061": {
      " com.google.javascript.jscomp.PeepholeRemoveDeadCodeTest": [
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:064": {
      " com.google.javascript.jscomp.CommandLineRunnerTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:065": {
      " com.google.javascript.jscomp.CodePrinterTest": [
         "junit.framework.ComparisonFailure"
      ]
   },
   "CLOSURE:066": {
      " com.google.javascript.jscomp.TypeCheckTest": [
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:073": {
      " com.google.javascript.jscomp.CodePrinterTest": [
         "junit.framework.ComparisonFailure"
      ]
   },
   "CLOSURE:067": {
      " com.google.javascript.jscomp.RemoveUnusedPrototypePropertiesTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:074": {
      " com.google.javascript.jscomp.PeepholeFoldConstantsTest": [
         "junit.framework.AssertionFailedError",
         "junit.framework.ComparisonFailure",
         "junit.framework.ComparisonFailure"
      ]
   },
   "CLOSURE:071": {
      " com.google.javascript.jscomp.CheckAccessControlsTest": [
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:068": {
      " com.google.javascript.jscomp.parsing.JsDocInfoParserTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:069": {
      " com.google.javascript.jscomp.TypeCheckTest": [
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:070": {
      " com.google.javascript.jscomp.LooseTypeCheckTest": [
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError"
      ],
      " com.google.javascript.jscomp.TypeCheckTest": [
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:072": {
      " com.google.javascript.jscomp.InlineFunctionsTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:076": {
      " com.google.javascript.jscomp.DeadAssignmentsEliminationTest": [
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:079": {
      " com.google.javascript.jscomp.NormalizeTest": [
         "java.lang.RuntimeException"
      ],
      " com.google.javascript.jscomp.VarCheckTest": [
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:077": {
      " com.google.javascript.jscomp.CodePrinterTest": [
         "junit.framework.ComparisonFailure"
      ]
   },
   "CLOSURE:075": {
      " com.google.javascript.jscomp.PeepholeFoldConstantsTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:078": {
      " com.google.javascript.jscomp.PeepholeFoldConstantsTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:083": {
      " com.google.javascript.jscomp.CommandLineRunnerTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:080": {
      " com.google.javascript.jscomp.NodeUtilTest": [
         "junit.framework.AssertionFailedError",
         "java.lang.IllegalStateException"
      ]
   },
   "CLOSURE:081": {
      " com.google.javascript.jscomp.parsing.ParserTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:082": {
      " com.google.javascript.jscomp.TypeCheckTest": [
         "junit.framework.AssertionFailedError"
      ],
      " com.google.javascript.rhino.jstype.FunctionTypeTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:085": {
      " com.google.javascript.jscomp.UnreachableCodeEliminationTest": [
         "junit.framework.AssertionFailedError",
         "java.lang.RuntimeException"
      ]
   },
   "CLOSURE:086": {
      " com.google.javascript.jscomp.NodeUtilTest": [
         "junit.framework.AssertionFailedError"
      ],
      " com.google.javascript.jscomp.PureFunctionIdentifierTest": [
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:084": {
      " com.google.javascript.jscomp.parsing.ParserTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:089": {
      " com.google.javascript.jscomp.CollapsePropertiesTest": [
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:088": {
      " com.google.javascript.jscomp.CommandLineRunnerTest": [
         "junit.framework.AssertionFailedError"
      ],
      " com.google.javascript.jscomp.DeadAssignmentsEliminationTest": [
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:087": {
      " com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:092": {
      " com.google.javascript.jscomp.ProcessClosurePrimitivesTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:095": {
      " com.google.javascript.jscomp.TypeCheckTest": [
         "junit.framework.AssertionFailedError"
      ],
      " com.google.javascript.jscomp.TypedScopeCreatorTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:090": {
      " com.google.javascript.jscomp.TypeCheckTest": [
         "junit.framework.AssertionFailedError",
         "junit.framework.ComparisonFailure"
      ]
   },
   "CLOSURE:094": {
      " com.google.javascript.jscomp.NodeUtilTest": [
         "junit.framework.AssertionFailedError"
      ],
      " com.google.javascript.jscomp.ProcessDefinesTest": [
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:091": {
      " com.google.javascript.jscomp.CheckGlobalThisTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:093": {
      " com.google.javascript.jscomp.ProcessClosurePrimitivesTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:097": {
      " com.google.javascript.jscomp.PeepholeFoldConstantsTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:096": {
      " com.google.javascript.jscomp.TypeCheckTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:101": {
      " com.google.javascript.jscomp.CommandLineRunnerTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:100": {
      " com.google.javascript.jscomp.CheckGlobalThisTest": [
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:098": {
      " com.google.javascript.jscomp.InlineVariablesTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:099": {
      " com.google.javascript.jscomp.CheckGlobalThisTest": [
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:104": {
      " com.google.javascript.rhino.jstype.UnionTypeTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:105": {
      " com.google.javascript.jscomp.FoldConstantsTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:106": {
      " com.google.javascript.jscomp.CheckSideEffectsTest": [
         "junit.framework.AssertionFailedError"
      ],
      " com.google.javascript.jscomp.CollapsePropertiesTest": [
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "java.lang.IllegalArgumentException"
      ]
   },
   "CLOSURE:102": {
      " com.google.javascript.jscomp.CompilerRunnerTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:103": {
      " com.google.javascript.jscomp.CheckUnreachableCodeTest": [
         "junit.framework.AssertionFailedError"
      ],
      " com.google.javascript.jscomp.ControlFlowAnalysisTest": [
         "junit.framework.AssertionFailedError"
      ],
      " com.google.javascript.jscomp.DisambiguatePropertiesTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:107": {
      " com.google.javascript.jscomp.CommandLineRunnerTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:108": {
      " com.google.javascript.jscomp.ScopedAliasesTest": [
         "java.lang.IllegalStateException"
      ]
   },
   "CLOSURE:109": {
      " com.google.javascript.jscomp.parsing.JsDocInfoParserTest": [
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:117": {
      " com.google.javascript.jscomp.TypeCheckTest": [
         "junit.framework.ComparisonFailure"
      ]
   },
   "CLOSURE:112": {
      " com.google.javascript.jscomp.TypeCheckTest": [
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:114": {
      " com.google.javascript.jscomp.NameAnalyzerTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:113": {
      " com.google.javascript.jscomp.VarCheckTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:115": {
      " com.google.javascript.jscomp.InlineFunctionsTest": [
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:116": {
      " com.google.javascript.jscomp.FunctionInjectorTest": [
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError"
      ],
      " com.google.javascript.jscomp.InlineFunctionsTest": [
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:111": {
      " com.google.javascript.jscomp.ClosureReverseAbstractInterpreterTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:110": {
      " com.google.javascript.jscomp.ScopedAliasesTest": [
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:118": {
      " com.google.javascript.jscomp.DisambiguatePropertiesTest": [
         "junit.framework.ComparisonFailure",
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:120": {
      " com.google.javascript.jscomp.InlineVariablesTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:119": {
      " com.google.javascript.jscomp.CheckGlobalNamesTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:121": {
      " com.google.javascript.jscomp.InlineVariablesTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:123": {
      " com.google.javascript.jscomp.CodePrinterTest": [
         "junit.framework.ComparisonFailure"
      ]
   },
   "CLOSURE:122": {
      " com.google.javascript.jscomp.parsing.ParserTest": [
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:126": {
      " com.google.javascript.jscomp.MinimizeExitPointsTest": [
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:124": {
      " com.google.javascript.jscomp.ExploitAssignsTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:127": {
      " com.google.javascript.jscomp.UnreachableCodeEliminationTest": [
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:125": {
      " com.google.javascript.jscomp.TypeCheckTest": [
         "java.lang.IllegalStateException"
      ]
   },
   "CLOSURE:128": {
      " com.google.javascript.jscomp.CodePrinterTest": [
         "junit.framework.ComparisonFailure"
      ]
   },
   "LANG:002": {
      " org.apache.commons.lang3.LocaleUtilsTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "LANG:005": {
      " org.apache.commons.lang3.LocaleUtilsTest": [
         "java.lang.IllegalArgumentException"
      ]
   },
   "CLOSURE:130": {
      " com.google.javascript.jscomp.CollapsePropertiesTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "LANG:004": {
      " org.apache.commons.lang3.text.translate.LookupTranslatorTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:129": {
      " com.google.javascript.jscomp.IntegrationTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "CLOSURE:132": {
      " com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "LANG:006": {
      " org.apache.commons.lang3.StringUtilsTest": [
         "java.lang.StringIndexOutOfBoundsException"
      ]
   },
   "CLOSURE:133": {
      " com.google.javascript.jscomp.parsing.JsDocInfoParserTest": [
         "java.lang.IllegalStateException"
      ]
   },
   "CLOSURE:131": {
      " com.google.javascript.jscomp.ConvertToDottedPropertiesTest": [
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError"
      ]
   },
   "LANG:008": {
      " org.apache.commons.lang3.time.FastDateFormat_PrinterTest": [
         "junit.framework.AssertionFailedError"
      ],
      " org.apache.commons.lang3.time.FastDatePrinterTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "LANG:010": {
      " org.apache.commons.lang3.time.FastDateFormat_ParserTest": [
         "junit.framework.AssertionFailedError"
      ],
      " org.apache.commons.lang3.time.FastDateParserTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "LANG:011": {
      " org.apache.commons.lang3.RandomStringUtilsTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "LANG:009": {
      " org.apache.commons.lang3.time.FastDateFormat_ParserTest": [
         "junit.framework.AssertionFailedError"
      ],
      " org.apache.commons.lang3.time.FastDateParserTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "LANG:013": {
      " org.apache.commons.lang3.SerializationUtilsTest": [
         "org.apache.commons.lang3.SerializationException"
      ]
   },
   "LANG:018": {
      " org.apache.commons.lang3.time.FastDateFormatTest": [
         "junit.framework.ComparisonFailure"
      ]
   },
   "LANG:014": {
      " org.apache.commons.lang3.StringUtilsEqualsIndexOfTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "LANG:016": {
      " org.apache.commons.lang3.math.NumberUtilsTest": [
         "java.lang.NumberFormatException"
      ]
   },
   "LANG:021": {
      " org.apache.commons.lang3.time.DateUtilsTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "LANG:024": {
      " org.apache.commons.lang3.math.NumberUtilsTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "LANG:026": {
      " org.apache.commons.lang3.time.FastDateFormatTest": [
         "junit.framework.ComparisonFailure"
      ]
   },
   "LANG:025": {
      " org.apache.commons.lang3.text.translate.EntityArraysTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "LANG:029": {
      " org.apache.commons.lang3.SystemUtilsTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "LANG:028": {
      " org.apache.commons.lang3.text.translate.NumericEntityUnescaperTest": [
         "junit.framework.ComparisonFailure"
      ]
   },
   "LANG:031": {
      " org.apache.commons.lang3.StringUtilsEqualsIndexOfTest": [
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError"
      ]
   },
   "LANG:033": {
      " org.apache.commons.lang3.ClassUtilsTest": [
         "java.lang.NullPointerException"
      ]
   },
   "LANG:037": {
      " org.apache.commons.lang3.ArrayUtilsAddTest": [
         "java.lang.ArrayStoreException"
      ]
   },
   "LANG:038": {
      " org.apache.commons.lang3.time.FastDateFormatTest": [
         "junit.framework.ComparisonFailure"
      ]
   },
   "LANG:043": {
      " org.apache.commons.lang.text.ExtendedMessageFormatTest": [
         "java.lang.OutOfMemoryError"
      ]
   },
   "LANG:039": {
      " org.apache.commons.lang3.StringUtilsTest": [
         "java.lang.NullPointerException"
      ]
   },
   "LANG:040": {
      " org.apache.commons.lang.StringUtilsEqualsIndexOfTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "LANG:044": {
      " org.apache.commons.lang.NumberUtilsTest": [
         "java.lang.StringIndexOutOfBoundsException"
      ]
   },
   "LANG:045": {
      " org.apache.commons.lang.WordUtilsTest": [
         "java.lang.StringIndexOutOfBoundsException"
      ]
   },
   "LANG:048": {
      " org.apache.commons.lang.builder.EqualsBuilderTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "LANG:052": {
      " org.apache.commons.lang.StringEscapeUtilsTest": [
         "junit.framework.ComparisonFailure"
      ]
   },
   "LANG:046": {
      " org.apache.commons.lang.StringEscapeUtilsTest": [
         "junit.framework.ComparisonFailure"
      ]
   },
   "LANG:051": {
      " org.apache.commons.lang.BooleanUtilsTest": [
         "java.lang.StringIndexOutOfBoundsException"
      ]
   },
   "LANG:049": {
      " org.apache.commons.lang.math.FractionTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "LANG:054": {
      " org.apache.commons.lang.LocaleUtilsTest": [
         "java.lang.IllegalArgumentException"
      ]
   },
   "LANG:057": {
      " org.apache.commons.lang.LocaleUtilsTest": [
         "java.lang.NullPointerException",
         "java.lang.NullPointerException",
         "java.lang.NullPointerException",
         "java.lang.NullPointerException",
         "java.lang.NullPointerException",
         "java.lang.NullPointerException",
         "java.lang.NullPointerException",
         "java.lang.NullPointerException",
         "java.lang.NullPointerException",
         "java.lang.NullPointerException",
         "java.lang.NullPointerException"
      ]
   },
   "LANG:058": {
      " org.apache.commons.lang.math.NumberUtilsTest": [
         "java.lang.NumberFormatException"
      ]
   },
   "LANG:064": {
      " org.apache.commons.lang.enums.ValuedEnumTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "LANG:055": {
      " org.apache.commons.lang.time.StopWatchTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "LANG:059": {
      " org.apache.commons.lang.text.StrBuilderAppendInsertTest": [
         "java.lang.ArrayIndexOutOfBoundsException"
      ]
   },
   "LANG:061": {
      " org.apache.commons.lang.text.StrBuilderTest": [
         "junit.framework.AssertionFailedError",
         "java.lang.ArrayIndexOutOfBoundsException"
      ]
   },
   "MATH:002": {
      " org.apache.commons.math3.distribution.HypergeometricDistributionTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "MATH:003": {
      " org.apache.commons.math3.util.MathArraysTest": [
         "java.lang.ArrayIndexOutOfBoundsException"
      ]
   },
   "MATH:005": {
      " org.apache.commons.math3.complex.ComplexTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "MATH:008": {
      " org.apache.commons.math3.distribution.DiscreteRealDistributionTest": [
         "java.lang.ArrayStoreException"
      ]
   },
   "MATH:011": {
      " org.apache.commons.math3.distribution.MultivariateNormalDistributionTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "MATH:006": {
      " org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizerTest": [
         "junit.framework.AssertionFailedError"
      ],
      " org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest": [
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError"
      ],
      " org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizerTest": [
         "junit.framework.AssertionFailedError"
      ],
      " org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerMultiDirectionalTest": [
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError"
      ],
      " org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerNelderMeadTest": [
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError"
      ],
      " org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizerTest": [
         "junit.framework.AssertionFailedError"
      ],
      " org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizerTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "MATH:010": {
      " org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "MATH:012": {
      " org.apache.commons.math3.distribution.GammaDistributionTest": [
         "junit.framework.AssertionFailedError"
      ],
      " org.apache.commons.math3.distribution.LogNormalDistributionTest": [
         "junit.framework.AssertionFailedError"
      ],
      " org.apache.commons.math3.distribution.NormalDistributionTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "MATH:009": {
      " org.apache.commons.math3.geometry.euclidean.threed.LineTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "MATH:013": {
      " org.apache.commons.math3.optimization.fitting.PolynomialFitterTest": [
         "java.lang.OutOfMemoryError"
      ]
   },
   "MATH:015": {
      " org.apache.commons.math3.util.FastMathTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "MATH:017": {
      " org.apache.commons.math3.dfp.DfpTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "MATH:022": {
      " org.apache.commons.math3.distribution.FDistributionTest": [
         "junit.framework.AssertionFailedError"
      ],
      " org.apache.commons.math3.distribution.UniformRealDistributionTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "MATH:020": {
      " org.apache.commons.math3.optimization.direct.CMAESOptimizerTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "MATH:019": {
      " org.apache.commons.math3.optimization.direct.CMAESOptimizerTest": [
         "java.lang.Exception"
      ]
   },
   "MATH:030": {
      " org.apache.commons.math3.stat.inference.MannWhitneyUTestTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "MATH:025": {
      " org.apache.commons.math3.optimization.fitting.HarmonicFitterTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "MATH:027": {
      " org.apache.commons.math3.fraction.FractionTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "MATH:031": {
      " org.apache.commons.math3.distribution.BinomialDistributionTest": [
         "org.apache.commons.math3.exception.ConvergenceException"
      ],
      " org.apache.commons.math3.distribution.FDistributionTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "MATH:032": {
      " org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest": [
         "java.lang.ClassCastException"
      ]
   },
   "MATH:033": {
      " org.apache.commons.math3.optimization.linear.SimplexSolverTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "MATH:034": {
      " org.apache.commons.math3.genetics.ListPopulationTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "MATH:039": {
      " org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "MATH:042": {
      " org.apache.commons.math.optimization.linear.SimplexSolverTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "MATH:041": {
      " org.apache.commons.math.stat.descriptive.moment.VarianceTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "MATH:048": {
      " org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest": [
         "java.lang.Exception"
      ]
   },
   "MATH:050": {
      " org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "MATH:045": {
      " org.apache.commons.math.linear.OpenMapRealMatrixTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "MATH:058": {
      " org.apache.commons.math.optimization.fitting.GaussianFitterTest": [
         "org.apache.commons.math.exception.NotStrictlyPositiveException"
      ]
   },
   "MATH:059": {
      " org.apache.commons.math.util.FastMathTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "MATH:057": {
      " org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "MATH:053": {
      " org.apache.commons.math.complex.ComplexTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "MATH:061": {
      " org.apache.commons.math.distribution.PoissonDistributionTest": [
         "org.apache.commons.math.MathRuntimeException$4"
      ]
   },
   "MATH:060": {
      " org.apache.commons.math.distribution.NormalDistributionTest": [
         "org.apache.commons.math.ConvergenceException"
      ]
   },
   "MATH:056": {
      " org.apache.commons.math.util.MultidimensionalCounterTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "MATH:063": {
      " org.apache.commons.math.util.MathUtilsTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "MATH:066": {
      " org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest": [
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError"
      ],
      " org.apache.commons.math.optimization.univariate.BrentOptimizerTest": [
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError"
      ]
   },
   "MATH:064": {
      " org.apache.commons.math.optimization.general.MinpackTest": [
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError"
      ]
   },
   "MATH:070": {
      " org.apache.commons.math.analysis.solvers.BisectionSolverTest": [
         "java.lang.NullPointerException"
      ]
   },
   "MATH:069": {
      " org.apache.commons.math.stat.correlation.PearsonsCorrelationTest": [
         "junit.framework.AssertionFailedError"
      ],
      " org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "MATH:071": {
      " org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest": [
         "junit.framework.AssertionFailedError"
      ],
      " org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "MATH:073": {
      " org.apache.commons.math.analysis.solvers.BrentSolverTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "MATH:075": {
      " org.apache.commons.math.stat.FrequencyTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "MATH:077": {
      " org.apache.commons.math.linear.ArrayRealVectorTest": [
         "junit.framework.AssertionFailedError"
      ],
      " org.apache.commons.math.linear.SparseRealVectorTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "MATH:082": {
      " org.apache.commons.math.optimization.linear.SimplexSolverTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "MATH:084": {
      " org.apache.commons.math.optimization.direct.MultiDirectionalTest": [
         "junit.framework.AssertionFailedError",
         "org.apache.commons.math.optimization.OptimizationException"
      ]
   },
   "MATH:080": {
      " org.apache.commons.math.linear.EigenDecompositionImplTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "MATH:078": {
      " org.apache.commons.math.ode.events.EventStateTest": [
         "org.apache.commons.math.MathRuntimeException$4"
      ]
   },
   "MATH:079": {
      " org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest": [
         "java.lang.NullPointerException"
      ]
   },
   "MATH:085": {
      " org.apache.commons.math.distribution.NormalDistributionTest": [
         "org.apache.commons.math.MathException"
      ]
   },
   "MATH:089": {
      " org.apache.commons.math.stat.FrequencyTest": [
         "java.lang.ClassCastException"
      ]
   },
   "MATH:087": {
      " org.apache.commons.math.optimization.linear.SimplexSolverTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "MATH:088": {
      " org.apache.commons.math.optimization.linear.SimplexSolverTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "MATH:091": {
      " org.apache.commons.math.fraction.FractionTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "MATH:094": {
      " org.apache.commons.math.util.MathUtilsTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "MATH:090": {
      " org.apache.commons.math.stat.FrequencyTest": [
         "java.lang.IllegalArgumentException"
      ]
   },
   "MATH:096": {
      " org.apache.commons.math.complex.ComplexTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "MATH:092": {
      " org.apache.commons.math.util.MathUtilsTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "MATH:101": {
      " org.apache.commons.math.complex.ComplexFormatTest": [
         "java.lang.StringIndexOutOfBoundsException"
      ],
      " org.apache.commons.math.complex.FrenchComplexFormatTest": [
         "java.lang.StringIndexOutOfBoundsException"
      ]
   },
   "MATH:105": {
      " org.apache.commons.math.stat.regression.SimpleRegressionTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "MATH:104": {
      " org.apache.commons.math.special.GammaTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "MATH:097": {
      " org.apache.commons.math.analysis.BrentSolverTest": [
         "java.lang.IllegalArgumentException"
      ]
   },
   "MATH:103": {
      " org.apache.commons.math.distribution.NormalDistributionTest": [
         "org.apache.commons.math.MaxIterationsExceededException"
      ]
   },
   "MOCKITO:002": {
      " org.mockito.internal.util.TimerTest": [
         "junit.framework.AssertionFailedError"
      ],
      " org.mockito.verification.NegativeDurationTest": [
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError"
      ]
   },
   "MOCKITO:001": {
      " org.mockito.internal.invocation.InvocationMatcherTest": [
         "java.lang.UnsupportedOperationException"
      ],
      " org.mockito.internal.util.reflection.FieldInitializerTest": [
         "java.lang.UnsupportedOperationException"
      ],
      " org.mockito.internal.util.reflection.ParameterizedConstructorInstantiatorTest": [
         "java.lang.UnsupportedOperationException",
         "java.lang.UnsupportedOperationException",
         "java.lang.UnsupportedOperationException",
         "java.lang.UnsupportedOperationException"
      ],
      " org.mockitousage.basicapi.ResetTest": [
         "java.lang.UnsupportedOperationException"
      ],
      " org.mockitousage.basicapi.UsingVarargsTest": [
         "java.lang.UnsupportedOperationException",
         "java.lang.UnsupportedOperationException",
         "java.lang.UnsupportedOperationException",
         "java.lang.UnsupportedOperationException",
         "java.lang.UnsupportedOperationException",
         "java.lang.UnsupportedOperationException",
         "java.lang.UnsupportedOperationException",
         "java.lang.UnsupportedOperationException",
         "java.lang.UnsupportedOperationException",
         "java.lang.UnsupportedOperationException"
      ],
      " org.mockitousage.bugs.VarargsErrorWhenCallingRealMethodTest": [
         "java.lang.UnsupportedOperationException"
      ],
      " org.mockitousage.bugs.varargs.VarargsAndAnyObjectPicksUpExtraInvocationsTest": [
         "java.lang.UnsupportedOperationException",
         "java.lang.UnsupportedOperationException"
      ],
      " org.mockitousage.bugs.varargs.VarargsNotPlayingWithAnyObjectTest": [
         "java.lang.UnsupportedOperationException"
      ],
      " org.mockitousage.matchers.VerificationAndStubbingUsingMatchersTest": [
         "java.lang.UnsupportedOperationException"
      ],
      " org.mockitousage.stubbing.BasicStubbingTest": [
         "java.lang.UnsupportedOperationException",
         "java.lang.UnsupportedOperationException"
      ],
      " org.mockitousage.stubbing.DeprecatedStubbingTest": [
         "java.lang.UnsupportedOperationException"
      ],
      " org.mockitousage.verification.VerificationInOrderMixedWithOrdiraryVerificationTest": [
         "java.lang.UnsupportedOperationException"
      ]
   },
   "MOCKITO:007": {
      " org.mockitousage.bugs.deepstubs.DeepStubFailingWhenGenricNestedAsRawTypeTest": [
         "org.mockito.exceptions.base.MockitoException"
      ]
   },
   "MOCKITO:010": {
      " org.mockitousage.bugs.DeepStubsWronglyReportsSerializationProblemsTest": [
         "org.mockito.exceptions.base.MockitoException"
      ]
   },
   "MOCKITO:005": {
      " org.mockitointegration.NoJUnitDependenciesTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "MOCKITO:006": {
      " org.mockitousage.matchers.AnyXMatchersAcceptNullsTest": [
         "junit.framework.ComparisonFailure",
         "junit.framework.ComparisonFailure"
      ],
      " org.mockitousage.matchers.MatchersTest": [
         "junit.framework.ComparisonFailure"
      ],
      " org.mockitousage.matchers.NewMatchersTest": [
         "junit.framework.ComparisonFailure",
         "junit.framework.ComparisonFailure",
         "junit.framework.ComparisonFailure",
         "junit.framework.ComparisonFailure"
      ]
   },
   "MOCKITO:009": {
      " org.mockitousage.constructor.CreatingMocksWithConstructorTest": [
         "org.mockito.exceptions.base.MockitoException",
         "org.mockito.exceptions.base.MockitoException",
         "org.mockito.exceptions.base.MockitoException"
      ]
   },
   "MOCKITO:008": {
      " org.mockito.internal.util.reflection.GenericMetadataSupportTest": [
         "java.lang.StackOverflowError"
      ]
   },
   "MOCKITO:016": {
      " org.mockitousage.bugs.StubbingMocksThatAreConfiguredToReturnMocksTest": [
         "org.mockito.exceptions.misusing.MissingMethodInvocationException"
      ]
   },
   "MOCKITO:015": {
      " org.mockitousage.bugs.InjectMocksShouldTryPropertySettersFirstBeforeFieldAccessTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "MOCKITO:014": {
      " org.mockitousage.bugs.VerifyingWithAnExtraCallToADifferentMockTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "MOCKITO:012": {
      " org.mockito.internal.util.reflection.GenericMasterTest": [
         "java.lang.ClassCastException"
      ],
      " org.mockitousage.annotation.CaptorAnnotationBasicTest": [
         "java.lang.ClassCastException",
         "java.lang.ClassCastException",
         "java.lang.ClassCastException",
         "java.lang.ClassCastException"
      ],
      " org.mockitousage.annotation.CaptorAnnotationTest": [
         "java.lang.ClassCastException",
         "java.lang.ClassCastException",
         "java.lang.ClassCastException",
         "java.lang.ClassCastException",
         "java.lang.ClassCastException"
      ]
   },
   "MOCKITO:013": {
      " org.mockitousage.bugs.VerifyingWithAnExtraCallToADifferentMockTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "MOCKITO:018": {
      " org.mockito.internal.stubbing.defaultanswers.ReturnsEmptyValuesTest": [
         "java.lang.NullPointerException"
      ]
   },
   "MOCKITO:022": {
      " org.mockito.internal.matchers.EqualityTest": [
         "java.lang.RuntimeException"
      ]
   },
   "MOCKITO:019": {
      " org.mockitousage.annotation.MockInjectionUsingSetterOrPropertyTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "MOCKITO:021": {
      " org.mockito.internal.creation.instance.ConstructorInstantiatorTest": [
         "org.mockito.internal.creation.instance.InstantationException"
      ]
   },
   "MOCKITO:028": {
      " org.mockitousage.bugs.InjectionByTypeShouldFirstLookForExactTypeThenAncestorTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "MOCKITO:024": {
      " org.mockito.internal.stubbing.defaultanswers.ReturnsEmptyValuesTest": [
         "junit.framework.AssertionFailedError"
      ],
      " org.mockitousage.bugs.ShouldMocksCompareToBeConsistentWithEqualsTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "MOCKITO:029": {
      " org.mockitousage.bugs.NPEWithCertainMatchersTest": [
         "java.lang.Exception"
      ]
   },
   "MOCKITO:025": {
      " org.mockito.internal.stubbing.defaultanswers.ReturnsGenericDeepStubsTest": [
         "java.lang.ClassCastException",
         "java.lang.ClassCastException",
         "java.lang.ClassCastException",
         "java.lang.ClassCastException",
         "java.lang.ClassCastException",
         "java.lang.ClassCastException"
      ]
   },
   "MOCKITO:027": {
      " org.mockitousage.bugs.ListenersLostOnResetMockTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "MOCKITO:026": {
      " org.mockito.internal.progress.HandyReturnValuesTest": [
         "java.lang.ClassCastException"
      ],
      " org.mockito.internal.stubbing.defaultanswers.ReturnsEmptyValuesTest": [
         "junit.framework.AssertionFailedError"
      ],
      " org.mockito.internal.stubbing.defaultanswers.ReturnsMocksTest": [
         "junit.framework.AssertionFailedError"
      ],
      " org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNullsTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "MOCKITO:032": {
      " org.mockitousage.bugs.SpyShouldHaveNiceNameTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "MOCKITO:031": {
      " org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNullsTest": [
         "junit.framework.ComparisonFailure"
      ]
   },
   "MOCKITO:034": {
      " org.mockito.internal.invocation.InvocationMatcherTest": [
         "java.lang.ArrayIndexOutOfBoundsException"
      ],
      " org.mockitousage.basicapi.UsingVarargsTest": [
         "java.lang.ArrayIndexOutOfBoundsException"
      ]
   },
   "MOCKITO:036": {
      " org.mockito.internal.invocation.InvocationTest": [
         "java.lang.NullPointerException"
      ],
      " org.mockitousage.spies.SpyingOnInterfacesTest": [
         "java.lang.NoSuchMethodError"
      ]
   },
   "MOCKITO:033": {
      " org.mockitousage.bugs.InheritedGenericsPolimorphicCallTest": [
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError"
      ]
   },
   "MOCKITO:030": {
      " org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNullsTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "MOCKITO:038": {
      " org.mockito.internal.verification.argumentmatching.ArgumentMatchingToolTest": [
         "java.lang.NullPointerException"
      ],
      " org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest": [
         "java.lang.NullPointerException"
      ]
   },
   "TIME:003": {
      " org.joda.time.TestMutableDateTime_Adds": [
         "junit.framework.ComparisonFailure",
         "junit.framework.ComparisonFailure",
         "junit.framework.ComparisonFailure",
         "junit.framework.ComparisonFailure",
         "junit.framework.ComparisonFailure"
      ]
   },
   "TIME:001": {
      " org.joda.time.TestPartial_Constructors": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "TIME:004": {
      " org.joda.time.TestPartial_Basics": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "MOCKITO:037": {
      " org.mockito.internal.stubbing.answers.AnswersValidatorTest": [
         "junit.framework.AssertionFailedError"
      ],
      " org.mockitousage.spies.SpyingOnInterfacesTest": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "TIME:002": {
      " org.joda.time.TestPartial_Basics": [
         "java.lang.IllegalArgumentException"
      ]
   },
   "TIME:007": {
      " org.joda.time.format.TestDateTimeFormatter": [
         "org.joda.time.IllegalFieldValueException",
         "org.joda.time.IllegalFieldValueException"
      ]
   },
   "TIME:010": {
      " org.joda.time.TestDays": [
         "org.joda.time.IllegalFieldValueException"
      ],
      " org.joda.time.TestMonths": [
         "org.joda.time.IllegalFieldValueException"
      ]
   },
   "TIME:011": {
      " org.joda.time.tz.TestCompiler": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "TIME:014": {
      " org.joda.time.TestMonthDay_Basics": [
         "org.joda.time.IllegalFieldValueException",
         "org.joda.time.IllegalFieldValueException",
         "org.joda.time.IllegalFieldValueException",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "org.joda.time.IllegalFieldValueException",
         "org.joda.time.IllegalFieldValueException",
         "org.joda.time.IllegalFieldValueException"
      ]
   },
   "TIME:015": {
      " org.joda.time.field.TestFieldUtils": [
         "junit.framework.AssertionFailedError"
      ]
   },
   "TIME:016": {
      " org.joda.time.format.TestDateTimeFormatter": [
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError"
      ]
   },
   "TIME:018": {
      " org.joda.time.chrono.TestGJChronology": [
         "org.joda.time.IllegalFieldValueException"
      ]
   },
   "TIME:019": {
      " org.joda.time.TestDateTimeZoneCutover": [
         "junit.framework.ComparisonFailure"
      ]
   },
   "TIME:023": {
      " org.joda.time.TestDateTimeZone": [
         "junit.framework.ComparisonFailure"
      ]
   },
   "TIME:025": {
      " org.joda.time.TestDateTimeZoneCutover": [
         "junit.framework.ComparisonFailure",
         "junit.framework.ComparisonFailure",
         "junit.framework.ComparisonFailure"
      ]
   },
   "TIME:026": {
      " org.joda.time.TestDateTimeZoneCutover": [
         "junit.framework.ComparisonFailure",
         "junit.framework.ComparisonFailure",
         "junit.framework.ComparisonFailure",
         "junit.framework.AssertionFailedError",
         "junit.framework.ComparisonFailure",
         "junit.framework.ComparisonFailure",
         "junit.framework.ComparisonFailure",
         "junit.framework.AssertionFailedError"
      ]
   },
   "TIME:024": {
      " org.joda.time.format.TestDateTimeFormatter": [
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError",
         "junit.framework.AssertionFailedError"
      ]
   },
   "TIME:027": {
      " org.joda.time.format.TestPeriodFormatterBuilder": [
         "java.lang.IllegalArgumentException"
      ]
   }
}