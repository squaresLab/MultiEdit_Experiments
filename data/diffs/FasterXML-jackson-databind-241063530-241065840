Only in after/: bears.json
Only in after/: classpath.info
diff -r -x '*.log' -x '*.config' -x '*git*' -x '*.md' -x '*.xml' before/src/main/java/com/fasterxml/jackson/databind/type/ResolvedRecursiveType.java after/src/main/java/com/fasterxml/jackson/databind/type/ResolvedRecursiveType.java
27a28,35
>    
>     @Override
>     public JavaType getSuperClass() {
>     	if (_referencedType != null) {
>     		return _referencedType.getSuperClass();
>     	}
>     	return super.getSuperClass();
>     }
diff -r -x '*.log' -x '*.config' -x '*git*' -x '*.md' -x '*.xml' before/src/test/java/com/fasterxml/jackson/databind/type/RecursiveTypeTest.java after/src/test/java/com/fasterxml/jackson/databind/type/RecursiveTypeTest.java
15a16,24
>     // for [databind#1647]
>     static interface IFace<T> {}
> 
>     // for [databind#1647]
>     static class Base implements IFace<Sub> { }
> 
>     // for [databind#1647]
>     static class Sub extends Base { }
> 
94a104,113
>     }
> 
>     // for [databind#1647]
>     public void testSuperClassWithReferencedJavaType() {
>         TypeFactory tf = objectMapper().getTypeFactory();
>         tf.constructType(Base.class); // must be constructed before sub to set the cache correctly
>         JavaType subType = tf.constructType(Sub.class);
>         // baseTypeFromSub should be a ResolvedRecursiveType in this test
>         JavaType baseTypeFromSub = subType.getSuperClass();
>         assertNotNull(baseTypeFromSub.getSuperClass());
Only in after/src/test/java/com/fasterxml/jackson/databind/type: TestTypeFactoryWithRecursiveTypes.java
