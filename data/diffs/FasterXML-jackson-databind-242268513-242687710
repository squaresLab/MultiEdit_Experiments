Only in after/: bears.json
Only in after/: classpath.info
diff -r -x '*.log' -x '*.config' -x '*git*' -x '*.md' -x '*.xml' before/src/main/java/com/fasterxml/jackson/databind/util/StdDateFormat.java after/src/main/java/com/fasterxml/jackson/databind/util/StdDateFormat.java
42a43,49
>      * Same as 'regular' 8601 except misses timezone altogether
>      *
>      * @since 2.8.10
>      */
>     protected final static String DATE_FORMAT_STR_ISO8601_NO_TZ = "yyyy-MM-dd'T'HH:mm:ss.SSS";
> 
>     /**
58a66
>         DATE_FORMAT_STR_ISO8601_NO_TZ,
73c81
<     
---
> 
77a86
>     protected final static DateFormat DATE_FORMAT_ISO8601_NO_TZ; // since 2.8.10
95a105,106
>         DATE_FORMAT_ISO8601_NO_TZ = new SimpleDateFormat(DATE_FORMAT_STR_ISO8601_NO_TZ, DEFAULT_LOCALE);
>         DATE_FORMAT_ISO8601_NO_TZ.setTimeZone(DEFAULT_TIMEZONE);
125a137
>     protected transient DateFormat _formatISO8601_noTz; // 2.8.10
507,509c519
<                 // If not, plain date. Easiest to just patch 'Z' in the end?
<                 StringBuilder sb = new StringBuilder(dateStr);
<                 // And possible also millisecond part if missing
---
>                 // If not, plain date, no timezone
510a521
>                 // And possible also millisecond part if missing
511a523
>                     StringBuilder sb = new StringBuilder(dateStr);
519a532
>                     dateStr = sb.toString();
521,524c534,535
<                 sb.append('Z');
<                 dateStr = sb.toString();
<                 df = _formatISO8601_z;
<                 formatStr = DATE_FORMAT_STR_ISO8601_Z;
---
>                 df = _formatISO8601_noTz;
>                 formatStr = DATE_FORMAT_STR_ISO8601_NO_TZ;
529,530c540,541
<                     df = _formatISO8601_z = _cloneFormat(DATE_FORMAT_ISO8601_Z, formatStr,
<                             DEFAULT_TIMEZONE, _locale, _lenient);
---
>                     df = _formatISO8601_noTz = _cloneFormat(DATE_FORMAT_ISO8601_NO_TZ, formatStr,
>                             _timezone, _locale, _lenient);
590a602,603
>         _formatISO8601_noTz = null;
> 
diff -r -x '*.log' -x '*.config' -x '*git*' -x '*.md' -x '*.xml' before/src/test/java/com/fasterxml/jackson/databind/deser/TestDateDeserialization.java after/src/test/java/com/fasterxml/jackson/databind/deser/TestDateDeserialization.java
265a266,287
>     // [databind#1657]: no timezone should use configured default
>     public void testDateUtilISO8601NoTimezoneNonDefault() throws Exception
>     {
>         // In first case, no timezone -> SHOULD use configured timezone
>         ObjectReader r = MAPPER.readerFor(Date.class);
>         TimeZone tz = TimeZone.getTimeZone("GMT-2");
>         Date date1 = r.with(tz)
>                 .readValue(quote("1970-01-01T00:00:00.000"));
>         // Second case, should use specified timezone, not configured
>         Date date2 = r.with(TimeZone.getTimeZone("GMT+5"))
>                 .readValue(quote("1970-01-01T00:00:00.000-02:00"));
>         assertEquals(date1, date2);
> 
>         // also verify actual value, in GMT
>         Calendar c = Calendar.getInstance(TimeZone.getTimeZone("GMT"));
>         c.setTime(date1);
>         assertEquals(1970, c.get(Calendar.YEAR));
>         assertEquals(Calendar.JANUARY, c.get(Calendar.MONTH));
>         assertEquals(1, c.get(Calendar.DAY_OF_MONTH));
>         assertEquals(2, c.get(Calendar.HOUR_OF_DAY));
>     }
> 
299c321
<     
---
> 
