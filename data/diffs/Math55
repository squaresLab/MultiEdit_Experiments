diff -r -x '*.config' -x '*git*' -x '*.md' -x '*.xml' d4j_buggy/Math55/src/main/java/org/apache/commons/math/geometry/Vector3D.java d4j_patched/Math55/src/main/java/org/apache/commons/math/geometry/Vector3D.java
458a459,463
>       final double n1 = v1.getNormSq();
>       final double n2 = v2.getNormSq();
>       if ((n1 * n2) < MathUtils.SAFE_MIN) {
>           return ZERO;
>       }
461a467,473
>       final int deltaExp = (FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4;
>       final double x1    = FastMath.scalb(v1.x, -deltaExp);
>       final double y1    = FastMath.scalb(v1.y, -deltaExp);
>       final double z1    = FastMath.scalb(v1.z, -deltaExp);
>       final double x2    = FastMath.scalb(v2.x,  deltaExp);
>       final double y2    = FastMath.scalb(v2.y,  deltaExp);
>       final double z2    = FastMath.scalb(v2.z,  deltaExp);
469a482,483
>       final double ratio = (x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2, 2 * deltaExp);
>       final double rho   = FastMath.rint(256 * ratio) / 256;
470a485,487
>       final double x3 = x1 - rho * x2;
>       final double y3 = y1 - rho * y2;
>       final double z3 = z1 - rho * z2;
473c490
<       return new Vector3D(v1.y * v2.z - v1.z * v2.y, v1.z * v2.x - v1.x * v2.z, v1.x * v2.y - v1.y * v2.x);
---
>       return new Vector3D(y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2);
