Only in after/: bears.json
Only in after/suite/spdz2k: classpath.info
diff -r -x '*.log' -x '*.config' -x '*git*' -x '*.md' -x '*.xml' before/suite/spdz2k/src/main/java/dk/alexandra/fresco/suite/spdz2k/datatypes/CompUInt128.java after/suite/spdz2k/src/main/java/dk/alexandra/fresco/suite/spdz2k/datatypes/CompUInt128.java
52d51
< //    this(value.toByteArray(), true);
diff -r -x '*.log' -x '*.config' -x '*git*' -x '*.md' -x '*.xml' before/suite/spdz2k/src/main/java/dk/alexandra/fresco/suite/spdz2k/datatypes/CompUInt96Factory.java after/suite/spdz2k/src/main/java/dk/alexandra/fresco/suite/spdz2k/datatypes/CompUInt96Factory.java
4a5
> import java.math.BigInteger;
13a15,19
>   }
> 
>   @Override
>   public CompUInt96 createFromBigInteger(BigInteger value) {
>     return value == null ? null : new CompUInt96(value);
diff -r -x '*.log' -x '*.config' -x '*git*' -x '*.md' -x '*.xml' before/suite/spdz2k/src/main/java/dk/alexandra/fresco/suite/spdz2k/datatypes/CompUInt96.java after/suite/spdz2k/src/main/java/dk/alexandra/fresco/suite/spdz2k/datatypes/CompUInt96.java
36c36
<     this(value.toByteArray());
---
>     this(value.shiftRight(64).intValue(), value.shiftRight(32).intValue(), value.intValue());
diff -r -x '*.log' -x '*.config' -x '*git*' -x '*.md' -x '*.xml' before/suite/spdz2k/src/main/java/dk/alexandra/fresco/suite/spdz2k/datatypes/CompUIntFactory.java after/suite/spdz2k/src/main/java/dk/alexandra/fresco/suite/spdz2k/datatypes/CompUIntFactory.java
95c95
<     return createFromBytes(new byte[getCompositeBitLength() / Byte.SIZE]);
---
>     return createFromBigInteger(BigInteger.ZERO);
diff -r -x '*.log' -x '*.config' -x '*git*' -x '*.md' -x '*.xml' before/suite/spdz2k/src/test/java/dk/alexandra/fresco/suite/spdz2k/datatypes/TestCompUInt96.java after/suite/spdz2k/src/test/java/dk/alexandra/fresco/suite/spdz2k/datatypes/TestCompUInt96.java
60a61,72
>     assertEquals(
>         BigInteger.valueOf(-1).mod(twoTo96),
>         new CompUInt96(BigInteger.valueOf(-1)).toBigInteger()
>     );
>     assertEquals(
>         BigInteger.valueOf(-2).mod(twoTo96),
>         new CompUInt96(BigInteger.valueOf(-2)).toBigInteger()
>     );
>     assertEquals(
>         twoTo96.subtract(BigInteger.ONE).negate().mod(twoTo96),
>         new CompUInt96(twoTo96.subtract(BigInteger.ONE).negate()).toBigInteger()
>     );
