diff -r -x '*.config' -x '*git*' -x '*.md' -x '*.xml' d4j_buggy/Closure162/src/com/google/javascript/jscomp/ScopedAliases.java d4j_patched/Closure162/src/com/google/javascript/jscomp/ScopedAliases.java
225a226
>         findAliases(t);
270a272,282
>     private void findAliases(NodeTraversal t) {
>       Scope scope = t.getScope();
>       for (Var v : scope.getVarIterable()) {
>         Node n = v.getNode();
>         int type = n.getType();
>         Node parent = n.getParent();
>         if (parent.getType() == Token.VAR) {
>           if (n.hasChildren() && n.getFirstChild().isQualifiedName()) {
>             String name = n.getString();
>             Var aliasVar = scope.getVar(name);
>             aliases.put(name, aliasVar);
271a284,287
>             String qualifiedName =
>                 aliasVar.getInitialValue().getQualifiedName();
>             transformation.addAlias(name, qualifiedName);
>           } else {
272a289,293
>             report(t, n, GOOG_SCOPE_NON_ALIAS_LOCAL, n.getString());
>           }
>         }
>       }
>     }
302a324,326
>       if (t.getScopeDepth() < 2) {
>         return;
>       }
303a328,336
>       int type = n.getType();
>       Var aliasVar = null;
>       if (type == Token.NAME) {
>         String name = n.getString();
>         Var lexicalVar = t.getScope().getVar(n.getString());
>         if (lexicalVar != null && lexicalVar == aliases.get(name)) {
>           aliasVar = lexicalVar;
>         }
>       }
307,313c340,341
<         int type = n.getType();
<         if (type == Token.NAME && parent.getType() == Token.VAR) {
<           if (n.hasChildren() && n.getFirstChild().isQualifiedName()) {
<             String name = n.getString();
<             Var aliasVar = t.getScope().getVar(name);
<             aliases.put(name, aliasVar);
< 
---
>         if (aliasVar != null && NodeUtil.isLValue(n)) {
>           if (aliasVar.getNode() == n) {
315,317c343
<             String qualifiedName =
<                 aliasVar.getInitialValue().getQualifiedName();
<             transformation.addAlias(name, qualifiedName);
---
> 
322,326d347
<             report(t, n, GOOG_SCOPE_NON_ALIAS_LOCAL, n.getString());
<           }
<         }
<         if (type == Token.NAME && NodeUtil.isAssignmentOp(parent) &&
<             n == parent.getFirstChild()) {
327a349
>           }
342,346c364
<         if (n.getType() == Token.NAME) {
<           String name = n.getString();
<           Var aliasVar = aliases.get(name);
<           if (aliasVar != null &&
<               t.getScope().getVar(name) == aliasVar) {
---
>         if (aliasVar != null) {
355d372
<           }
diff -r -x '*.config' -x '*git*' -x '*.md' -x '*.xml' d4j_buggy/Closure162/src/com/google/javascript/jscomp/Scope.java d4j_patched/Closure162/src/com/google/javascript/jscomp/Scope.java
567a568,570
>   Iterable<Var> getVarIterable() {
>     return vars.values();
>   }
