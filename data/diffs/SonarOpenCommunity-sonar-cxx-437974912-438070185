Only in after/: bears.json
Only in after/cxx-checks: classpath.info
diff -r -x '*.log' -x '*.config' -x '*git*' -x '*.md' -x '*.xml' before/cxx-checks/src/main/java/org/sonar/cxx/checks/naming/MethodNameCheck.java after/cxx-checks/src/main/java/org/sonar/cxx/checks/naming/MethodNameCheck.java
22,23c22
< import com.sonar.sslr.api.AstNode;
< import com.sonar.sslr.api.Grammar;
---
> import java.util.Optional;
24a24
> 
25a26
> 
34a36,39
> import com.sonar.sslr.api.AstNode;
> import com.sonar.sslr.api.GenericTokenType;
> import com.sonar.sslr.api.Grammar;
> 
113a119,134
>   private static Optional<AstNode> getMostNestedTypeName(AstNode nestedNameSpecifier) {
>     Optional<AstNode> result = Optional.empty();
>     for (AstNode child : nestedNameSpecifier.getChildren()) {
>       if (
>           // type name was recognized by parser (most probably the least nested type)
>           child.is(CxxGrammarImpl.typeName) ||
>           // type name was recognized as template
>           child.is(CxxGrammarImpl.simpleTemplateId) ||
>           // type name was recognized, but not properly typed
>           GenericTokenType.IDENTIFIER.equals(child.getToken().getType())) {
>         result = Optional.of(child);
>       }
>     }
>     return result;
>   }
> 
121c142
<         AstNode className = nestedNameSpecifier.getFirstDescendant(CxxGrammarImpl.className);
---
>         Optional<AstNode> typeName = getMostNestedTypeName(nestedNameSpecifier);
123c144
<         if ((className != null) && !className.getTokenValue().equals(idNode.getTokenValue())) {
---
>         if (typeName.isPresent() && !typeName.get().getTokenValue().equals(idNode.getTokenValue())) {
diff -r -x '*.log' -x '*.config' -x '*git*' -x '*.md' -x '*.xml' before/cxx-checks/src/test/java/org/sonar/cxx/checks/naming/MethodNameCheckTest.java after/cxx-checks/src/test/java/org/sonar/cxx/checks/naming/MethodNameCheckTest.java
49a50,52
>       .next().atLine(96).withMessage(
>       "Rename method \"Third_Level_Nested_Class_getX\" "
>       + "to match the regular expression ^[A-Z][A-Za-z0-9]{2,30}$.")
