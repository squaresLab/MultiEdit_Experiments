diff -r -x '*.config' -x '*git*' -x '*.md' -x '*.xml' d4j_buggy/JacksonXml6/src/main/java/com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator.java d4j_patched/JacksonXml6/src/main/java/com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator.java
842a843,855
>     @Override
>     public int writeBinary(Base64Variant b64variant, InputStream data, int dataLength) throws IOException
>     {
>         if (data == null) {
>             writeNull();
>             return 0;
>         }
>         _verifyValueWrite("write Binary value");
>         if (_nextName == null) {
>             handleMissingName();
>         }
>         try {
>             if (_nextIsAttribute) {
843a857,859
>                 byte[] fullBuffer = toFullBuffer(data, dataLength);
>                 _xmlWriter.writeBinaryAttribute("", _nextName.getNamespaceURI(), _nextName.getLocalPart(), fullBuffer);
>             } else if (checkNextIsUnwrapped()) {
844a861
>                 writeStreamAsBinary(data, dataLength);
845a863,876
>             } else {
>                 if (_xmlPrettyPrinter != null) {
>                     _xmlPrettyPrinter.writeLeafElement(_xmlWriter,
>                             _nextName.getNamespaceURI(), _nextName.getLocalPart(),
>                             toFullBuffer(data, dataLength), 0, dataLength);
>                 } else {
>                     _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());
>                     writeStreamAsBinary(data, dataLength);
>                     _xmlWriter.writeEndElement();
>                 }
>             }
>         } catch (XMLStreamException e) {
>             StaxUtil.throwAsGenerationException(e, this);
>         }
846a878,879
>         return dataLength;
>     }
847a881,882
>     private void writeStreamAsBinary(InputStream data, int len) throws IOException, XMLStreamException 
>     {
848a884,897
>         byte[] tmp = new byte[3];
>         int offset = 0;
>         int read;
>         while((read = data.read(tmp, offset, Math.min(3 - offset, len))) != -1) {
>             offset += read;
>             len -= read;
>             if(offset == 3) {
>                 offset = 0;
>                 _xmlWriter.writeBinary(tmp, 0, 3);
>             }
>             if (len == 0) {
>                 break;
>             }
>         }
850a900,903
>         if(offset > 0) {
>             _xmlWriter.writeBinary(tmp, 0, offset);
>         }
>     }
865a919,922
>     private byte[] toFullBuffer(InputStream data, final int len) throws IOException 
>     {
>         byte[] result = new byte[len];
>         int offset = 0;
866a924,932
>         for (; offset < len; ) {
>             int count = data.read(result, offset, len - offset);
>             if (count < 0) {
>                 _reportError("Too few bytes available: missing "+(len - offset)+" bytes (out of "+len+")");
>             }
>             offset += count;
>         }
>         return result;
>     }
