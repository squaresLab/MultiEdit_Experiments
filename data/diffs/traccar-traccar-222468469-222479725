Only in after/: bears.json
Only in after/: classpath.info
diff -r -x '*.log' -x '*.config' -x '*git*' -x '*.md' -x '*.xml' before/src/org/traccar/protocol/H02ProtocolDecoder.java after/src/org/traccar/protocol/H02ProtocolDecoder.java
187c187,189
<             .any()
---
>             .expression(",.*")
>             .or()
>             .text("#")
diff -r -x '*.log' -x '*.config' -x '*git*' -x '*.md' -x '*.xml' before/test/org/traccar/protocol/H02ProtocolDecoderTest.java after/test/org/traccar/protocol/H02ProtocolDecoderTest.java
4a5
> import org.traccar.model.Position;
13a15,17
>                 "*HQ,4109179024,V19,181519,V,3853.2587,S,06205.9175,W,000.00,000,090217,,5492932630888,8954315265044716555?,FFFFFBFF#"));
> 
>         verifyPosition(decoder, buffer(
183a188,210
> 
>     }
> 
>     @Test
>     public void testDecodeStatus() throws Exception {
> 
>         H02ProtocolDecoder decoder = new H02ProtocolDecoder(new H02Protocol());
> 
>         verifyAttribute(decoder, buffer(
>                 "*HQ,2705171109,V1,213324,A,5002.5849,N,01433.7822,E,0.00,000,140613,FFFFFFFF#"),
>                 Position.KEY_STATUS, 0xFFFFFFFFL);
> 
>         verifyAttribute(decoder, buffer(
>                 "*HQ,4109179024,V19,181519,V,3853.2587,S,06205.9175,W,000.00,000,090217,,5492932630888,8954315265044716555?,FFFFFBFF#"),
>                 Position.KEY_STATUS, 0xFFFFFBFFL);
> 
>         verifyAttribute(decoder, binary(
>                 "2441091144271222470112142233983006114026520E000000FFFFFBFFFF0014060000000001CC00262B0F170A"),
>                 Position.KEY_STATUS, 0xFFFFFBFFL);
> 
>         verifyAttribute(decoder, buffer(
>                 "*HQ,4210051415,V1,164549,A,0956.3869,N,08406.7068,W,000.00,000,221215,FFFFFBFF,712,01,0,0,6#"),
>                 Position.KEY_STATUS, 0xFFFFFBFFL);
diff -r -x '*.log' -x '*.config' -x '*git*' -x '*.md' -x '*.xml' before/test/org/traccar/ProtocolTest.java after/test/org/traccar/ProtocolTest.java
88a89,92
>     protected void verifyAttribute(BaseProtocolDecoder decoder, Object object, String key, Object expected) throws Exception {
>         Assert.assertEquals(expected, ((Position) decoder.decode(null, null, object)).getAttributes().get(key));
>     }
> 
