diff -r -x '*.config' -x '*git*' -x '*.md' -x '*.xml' d4j_buggy/Jsoup28/src/main/java/org/jsoup/nodes/Entities.java d4j_patched/Jsoup28/src/main/java/org/jsoup/nodes/Entities.java
2a3
> import org.jsoup.parser.Parser;
60a62,64
>     public static boolean isBaseNamedEntity(String name) {
>         return base.containsKey(name);
>     }
103,129c107
<         if (!string.contains("&"))
<             return string;
<         Matcher m = strict? strictUnescapePattern.matcher(string) : unescapePattern.matcher(string);
<         StringBuffer accum = new StringBuffer(string.length());
<         while (m.find()) {
<             int charval = -1;
<             String num = m.group(3);
<             if (num != null) {
<                 try {
<                     int base = m.group(2) != null ? 16 : 10;
<                     charval = Integer.valueOf(num, base);
<                 } catch (NumberFormatException e) {
<                 }
<             } else {
<                 String name = m.group(1);
<                 if (full.containsKey(name))
<                     charval = full.get(name);
<             }
<             if (charval != -1 || charval > 0xFFFF) {
<                 String c = Character.toString((char) charval);
<                 m.appendReplacement(accum, Matcher.quoteReplacement(c));
<             } else {
<                 m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0)));
<             }
<         }
<         m.appendTail(accum);
<         return accum.toString();
---
>         return Parser.unescapeEntities(string, strict);
diff -r -x '*.config' -x '*git*' -x '*.md' -x '*.xml' d4j_buggy/Jsoup28/src/main/java/org/jsoup/parser/Parser.java d4j_patched/Jsoup28/src/main/java/org/jsoup/parser/Parser.java
132a133,136
>     public static String unescapeEntities(String string, boolean inAttribute) {
>         Tokeniser tokeniser = new Tokeniser(new CharacterReader(string), ParseErrorList.noTracking());
>         return tokeniser.unescapeEntities(inAttribute);
>     }
diff -r -x '*.config' -x '*git*' -x '*.md' -x '*.xml' d4j_buggy/Jsoup28/src/main/java/org/jsoup/parser/Tokeniser.java d4j_patched/Jsoup28/src/main/java/org/jsoup/parser/Tokeniser.java
136d135
<             String origNameRef = new String(nameRef);
139,147c138
<             boolean found = false;
<             while (nameRef.length() > 0 && !found) {
<                 if (Entities.isNamedEntity(nameRef))
<                     found = true;
<                 else {
<                     nameRef = nameRef.substring(0, nameRef.length()-1);
<                     reader.unconsume();
<                 }
<             }
---
>             boolean found = (Entities.isBaseNamedEntity(nameRef) || (Entities.isNamedEntity(nameRef) && looksLegit));
152c143
<                     characterReferenceError(String.format("invalid named referenece '%s'", origNameRef));
---
>                     characterReferenceError(String.format("invalid named referenece '%s'", nameRef));
237a229,243
>     String unescapeEntities(boolean inAttribute) {
>         StringBuilder builder = new StringBuilder();
>         while (!reader.isEmpty()) {
>             builder.append(reader.consumeTo('&'));
>             if (reader.matches('&')) {
>                 reader.consume();
>                 Character c = consumeCharacterReference(null, inAttribute);
>                 if (c == null)
>                     builder.append('&');
>                 else
>                     builder.append(c);
>             }
>         }
>         return builder.toString();
>     }
