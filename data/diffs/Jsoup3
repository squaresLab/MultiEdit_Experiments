diff -r -x '*.config' -x '*git*' -x '*.md' -x '*.xml' d4j_buggy/Jsoup3/src/main/java/org/jsoup/nodes/Element.java d4j_patched/Jsoup3/src/main/java/org/jsoup/nodes/Element.java
270c270
<         Element fragment = Parser.parseBodyFragment(html, baseUri).body();
---
>         Element fragment = Parser.parseBodyFragmentRelaxed(html, baseUri()).body();
287c287
<         Element fragment = Parser.parseBodyFragment(html, baseUri).body();
---
>         Element fragment = Parser.parseBodyFragmentRelaxed(html, baseUri()).body();
314c314
<         Element wrapBody = Parser.parseBodyFragment(html, baseUri).body();
---
>         Element wrapBody = Parser.parseBodyFragmentRelaxed(html, baseUri).body();
diff -r -x '*.config' -x '*git*' -x '*.md' -x '*.xml' d4j_buggy/Jsoup3/src/main/java/org/jsoup/parser/Parser.java d4j_patched/Jsoup3/src/main/java/org/jsoup/parser/Parser.java
25a26
>     private boolean relaxed = false;
72a74,78
>     public static Document parseBodyFragmentRelaxed(String bodyHtml, String baseUri) {
>         Parser parser = new Parser(bodyHtml, baseUri, true);
>         parser.relaxed = true;
>         return parser.parse();
>     }
224c230
<         if (!validAncestor) {
---
>         if (!validAncestor && !relaxed) {
252a259,260
>         if (childTag.requiresSpecificParent())
>             return stack.getLast().tag().isValidParent(childTag);
258c266
<             if (parent2.isValidParent(childTag)) {
---
>             if (parent2.isValidAncestor(childTag)) {
diff -r -x '*.config' -x '*git*' -x '*.md' -x '*.xml' d4j_buggy/Jsoup3/src/main/java/org/jsoup/parser/Tag.java d4j_patched/Jsoup3/src/main/java/org/jsoup/parser/Tag.java
27a28
>     private Tag parent; // if not null, elements must be a direct child of parent
98a100,101
>         if (this.requiresSpecificParent() && this.getImplicitParent().equals(child))
>             return false;
154a158,160
>     boolean requiresSpecificParent() {
>         return this.parent != null;
>     }
156a163,164
>         return this.equals(child.parent);
>     }
157a166
>     boolean isValidAncestor(Tag child) {
224,225c233,234
<         createBlock("FRAME").setAncestor("FRAMESET").setEmpty();
<         createBlock("NOFRAMES").setAncestor("FRAMESET").setContainDataOnly();
---
>         createBlock("FRAME").setParent("FRAMESET").setEmpty();
>         createBlock("NOFRAMES").setParent("FRAMESET").setContainDataOnly();
288,289c297,298
<         createInline("OPTGROUP").setAncestor("SELECT");
<         createInline("OPTION").setAncestor("SELECT").setContainDataOnly();
---
>         createInline("OPTGROUP").setParent("SELECT"); //  only contain option
>         createInline("OPTION").setParent("SELECT").setContainDataOnly();
295c304
<         createInline("PARAM").setAncestor("OBJECT").setEmpty();
---
>         createInline("PARAM").setParent("OBJECT").setEmpty();
300,301c309,310
<         createInline("DT").setAncestor("DL").setOptionalClosing();
<         createInline("DD").setAncestor("DL").setOptionalClosing();
---
>         createInline("DT").setParent("DL").setOptionalClosing(); // only within DL.
>         createInline("DD").setParent("DL").setOptionalClosing(); // only within DL.
307,315c316,324
<         createBlock("CAPTION").setAncestor("TABLE");
<         createBlock("THEAD").setAncestor("TABLE").setOptionalClosing();
<         createBlock("TFOOT").setAncestor("TABLE").setOptionalClosing();
<         createBlock("TBODY").setAncestor("TABLE").setOptionalClosing();
<         createBlock("COLGROUP").setAncestor("TABLE").setOptionalClosing();
<         createBlock("COL").setAncestor("COLGROUP").setEmpty();
<         createBlock("TR").setAncestor("TABLE").setOptionalClosing();
<         createBlock("TH").setAncestor("TR").setOptionalClosing();
<         createBlock("TD").setAncestor("TR").setOptionalClosing();
---
>         createBlock("CAPTION").setParent("TABLE");
>         createBlock("THEAD").setParent("TABLE").setOptionalClosing(); // just TR
>         createBlock("TFOOT").setParent("TABLE").setOptionalClosing(); // just TR
>         createBlock("TBODY").setParent("TABLE").setOptionalClosing(); // optional / implicit open too. just TR
>         createBlock("COLGROUP").setParent("TABLE").setOptionalClosing(); // just COL
>         createBlock("COL").setParent("COLGROUP").setEmpty();
>         createBlock("TR").setParent("TABLE").setOptionalClosing(); // just TH, TD
>         createBlock("TH").setParent("TR").setOptionalClosing();
>         createBlock("TD").setParent("TR").setOptionalClosing();
378a388,392
>     private Tag setParent(String tagName) {
>         parent = Tag.valueOf(tagName);
>         setAncestor(tagName);
>         return this;
>     }
