Only in after/: bears.json
Only in after/modules/swagger-codegen: classpath.info
diff -r -x '*.log' -x '*.config' -x '*git*' -x '*.md' -x '*.xml' before/modules/swagger-codegen/src/main/java/io/swagger/codegen/languages/SwaggerYamlGenerator.java after/modules/swagger-codegen/src/main/java/io/swagger/codegen/languages/SwaggerYamlGenerator.java
63c63,65
<             final ObjectMapper mapper = new ObjectMapper(new YAMLFactory().configure(YAMLGenerator.Feature.MINIMIZE_QUOTES, true));
---
>             final ObjectMapper mapper = new ObjectMapper(new YAMLFactory()
>                     .configure(YAMLGenerator.Feature.MINIMIZE_QUOTES, true)
>                     .configure(YAMLGenerator.Feature.ALWAYS_QUOTE_NUMBERS_AS_STRINGS, true));
diff -r -x '*.log' -x '*.config' -x '*git*' -x '*.md' -x '*.xml' before/modules/swagger-codegen/src/test/java/io/swagger/codegen/swaggeryaml/SwaggerYamlGeneratorTest.java after/modules/swagger-codegen/src/test/java/io/swagger/codegen/swaggeryaml/SwaggerYamlGeneratorTest.java
41a42,66
> 
>     @Test
>     public void testNumberAsStrings() throws Exception {
>         final TemporaryFolder folder = new TemporaryFolder();
>         folder.create();
>         final File output = folder.getRoot();
>         final CodegenConfigurator configurator = new CodegenConfigurator()
>                 .setLang("swagger-yaml")
>                 .setInputSpec("src/test/resources/2_0/petstore_issue_7999.json")
>                 .setOutputDir(output.getAbsolutePath());
> 
>         final ClientOptInput clientOptInput = configurator.toClientOptInput();
>         new DefaultGenerator().opts(clientOptInput).generate();
> 
>         File outputFile = new File(output, "swagger.yaml");
>         Assert.assertTrue(outputFile.exists());
> 
>         String content = FileUtils.readFileToString(outputFile);
> 
>         Assert.assertTrue(content.contains("swagger: \"2.0\""));
>         Assert.assertTrue(content.contains("version: \"1.0\""));
> 
>         folder.delete();
> 
>     }
