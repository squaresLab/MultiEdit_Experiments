Only in after/: bears.json
Only in after/: classpath.info
diff -r -x '*.log' -x '*.config' -x '*git*' -x '*.md' -x '*.xml' before/src/main/java/io/vertx/ext/jdbc/impl/actions/JDBCUpdate.java after/src/main/java/io/vertx/ext/jdbc/impl/actions/JDBCUpdate.java
45,48c45,63
<     if (options != null) {
<       if (options.isAutoGeneratedKeys() && options.getAutoGeneratedKeysIndexes() == null) {
<         generateKeys = true;
<         return conn.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);
---
>     if (options == null) {
>       generateKeys = true;
>       return conn.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);
>     }
> 
>     if (!options.isAutoGeneratedKeys()) {
>       generateKeys = false;
>       return conn.prepareStatement(sql, Statement.NO_GENERATED_KEYS);
>     }
> 
>     if (options.getAutoGeneratedKeysIndexes() == null) {
>       generateKeys = true;
>       return conn.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);
>     }
> 
>     if (options.getAutoGeneratedKeysIndexes().getValue(0) instanceof String) {
>       String[] columnNames = new String[options.getAutoGeneratedKeysIndexes().size()];
>       for (int i = 0; i < columnNames.length; i++) {
>         columnNames[i] = options.getAutoGeneratedKeysIndexes().getString(i);
51,72c66,68
<       if (options.getAutoGeneratedKeysIndexes() != null) {
<         // attempt to guess type from index 0
<         if (options.getAutoGeneratedKeysIndexes().getValue(0) instanceof String) {
<           String[] columnNames = new String[options.getAutoGeneratedKeysIndexes().size()];
<           for (int i = 0; i < columnNames.length; i++) {
<             columnNames[i] = options.getAutoGeneratedKeysIndexes().getString(i);
<           }
< 
<           generateKeys = true;
<           return conn.prepareStatement(sql, columnNames);
<         }
< 
<         // attempt to guess type from index 0
<         if (options.getAutoGeneratedKeysIndexes().getValue(0) instanceof Integer) {
<           int[] columnIndexes = new int[options.getAutoGeneratedKeysIndexes().size()];
<           for (int i = 0; i < columnIndexes.length; i++) {
<             columnIndexes[i] = options.getAutoGeneratedKeysIndexes().getInteger(i);
<           }
< 
<           generateKeys = true;
<           return conn.prepareStatement(sql, columnIndexes);
<         }
---
>       generateKeys = true;
>       return conn.prepareStatement(sql, columnNames);
>     }
74,75c70,73
<         // invalid type
<         throw new SQLException("Invalid type for auto generated keys");
---
>     if (options.getAutoGeneratedKeysIndexes().getValue(0) instanceof Number) {
>       int[] columnIndexes = new int[options.getAutoGeneratedKeysIndexes().size()];
>       for (int i = 0; i < columnIndexes.length; i++) {
>         columnIndexes[i] = options.getAutoGeneratedKeysIndexes().getInteger(i);
76a75,77
> 
>       generateKeys = true;
>       return conn.prepareStatement(sql, columnIndexes);
79,80c80,81
<     generateKeys = false;
<     return conn.prepareStatement(sql, Statement.NO_GENERATED_KEYS);
---
>     // invalid type
>     throw new SQLException("Invalid type for auto generated keys");
diff -r -x '*.log' -x '*.config' -x '*git*' -x '*.md' -x '*.xml' before/src/main/java/io/vertx/ext/jdbc/impl/JDBCConnectionImpl.java after/src/main/java/io/vertx/ext/jdbc/impl/JDBCConnectionImpl.java
50c50
<   private SQLOptions options = new SQLOptions().setAutoGeneratedKeys(true);
---
>   private SQLOptions options;
diff -r -x '*.log' -x '*.config' -x '*git*' -x '*.md' -x '*.xml' before/src/test/java/io/vertx/ext/jdbc/JDBCClientTest.java after/src/test/java/io/vertx/ext/jdbc/JDBCClientTest.java
221a222,232
>   public void testInsertOneShot() {
>     String sql = "INSERT INTO insert_table (FNAME, LNAME) VALUES (?,?)";
>     client.updateWithParams(sql, new JsonArray().add("Paulo").add("Lopes"), onSuccess(result -> {
>       assertUpdate(result, 1, true);
>       testComplete();
>     }));
> 
>     await();
>   }
> 
>   @Test
