Only in after/: bears.json
Only in after/debezium-connector-mysql: classpath.info
diff -r -x '*.log' -x '*.config' -x '*git*' -x '*.md' -x '*.xml' before/debezium-connector-mysql/src/main/java/io/debezium/connector/mysql/MySqlDdlParser.java after/debezium-connector-mysql/src/main/java/io/debezium/connector/mysql/MySqlDdlParser.java
1300c1300,1302
<             parsePartitionDefinition(start, table);
---
>             do {
>                 parsePartitionDefinition(start, table);
>             } while (tokens.canConsume(','));
diff -r -x '*.log' -x '*.config' -x '*git*' -x '*.md' -x '*.xml' before/debezium-connector-mysql/src/test/java/io/debezium/connector/mysql/MySqlDdlParserTest.java after/debezium-connector-mysql/src/test/java/io/debezium/connector/mysql/MySqlDdlParserTest.java
1405a1406,1415
>     @Test
>     @FixFor("DBZ-530")
>     public void parsePartitionReorganize() {
>         String ddl =
>                 "CREATE TABLE flat_view_request_log (id INT NOT NULL, myvalue INT DEFAULT -10, PRIMARY KEY (`id`));"
>               + "ALTER TABLE flat_view_request_log REORGANIZE PARTITION p_max INTO ( PARTITION p_2018_01_17 VALUES LESS THAN ('2018-01-17'), PARTITION p_2018_01_18 VALUES LESS THAN ('2018-01-18'), PARTITION p_max VALUES LESS THAN MAXVALUE);";
>         parser.parse(ddl, tables);
>         assertThat(tables.size()).isEqualTo(1);
>     }
> 
