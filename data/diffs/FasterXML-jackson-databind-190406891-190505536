Only in after/: bears.json
Only in after/: classpath.info
diff -r -x '*.log' -x '*.config' -x '*git*' -x '*.md' -x '*.xml' before/src/main/java/com/fasterxml/jackson/databind/deser/impl/BeanPropertyMap.java after/src/main/java/com/fasterxml/jackson/databind/deser/impl/BeanPropertyMap.java
95c95
<         
---
> 
426c426,427
<     public void remove(SettableBeanProperty propToRm) {
---
>     public void remove(SettableBeanProperty propToRm)
>     {
437c438,440
<                 found = key.equals(prop.getName());
---
>                 // 09-Jan-2017, tatu: Important: must check name slot and NOT property name,
>                 //   as only former is lower-case in case-insensitive case
>                 found = key.equals(_hashArea[i-1]);
diff -r -x '*.log' -x '*.config' -x '*git*' -x '*.md' -x '*.xml' before/src/test/java/com/fasterxml/jackson/databind/struct/TestUnwrapped.java after/src/test/java/com/fasterxml/jackson/databind/struct/TestUnwrapped.java
99a100,113
>     // [databind#1493]: case-insensitive handling
>     static class Person {
>         @JsonUnwrapped(prefix = "businessAddress.")
>         public Address businessAddress;
>     }
> 
>     static class Address {
>         public String street;
>         public String addon;
>         public String zip;
>         public String town;    
>         public String country;
>     }
> 
195,197d208
<     
<     // 22-Apr-2013, tatu: Commented out as it can't be simply fixed; requires implementing
<     //    deep-update/merge. But leaving here to help with that effort, if/when it proceeds.
199,233c210,216
<     /*
<     // [databind#211]: Actually just variant of #160
< 
<     static class Issue211Bean {
<         public String test1;
< 
<         public String test2;
<         @JsonUnwrapped
<         public Issue211Unwrapped unwrapped;
<     }
< 
<     static class Issue211Unwrapped {
<         public String test3;
<         public String test4;
<     }
< 
<     public void testIssue211() throws Exception
<     {
<          Issue211Bean bean = new Issue211Bean();
<          bean.test1 = "Field 1";
<          bean.test2 = "Field 2";
<          Issue211Unwrapped tJackson2 = new Issue211Unwrapped();
<          tJackson2.test3 = "Field 3";
<          tJackson2.test4 = "Field 4";
<          bean.unwrapped = tJackson2;
<  
<          final String JSON = "{\"test1\": \"Field 1 merged\", \"test3\": \"Field 3 merged\"}";
<          ObjectMapper o = new ObjectMapper();
<          Issue211Bean result = o.readerForUpdating(bean).withType(Issue211Bean.class).readValue(JSON);
<          assertSame(bean, result);
<          assertEquals("Field 1 merged", result.test1);
<          assertEquals("Field 2", result.test2);
<          assertNotNull(result.unwrapped);
<          assertEquals("Field 3 merged", result.unwrapped.test3);
<          assertEquals("Field 4", result.unwrapped.test4);
---
>     // [databind#1493]: case-insensitive handling
>     public void testCaseInsensitiveUnwrap() throws Exception
>     {
>         ObjectMapper mapper = new ObjectMapper();
>         mapper.enable(MapperFeature.ACCEPT_CASE_INSENSITIVE_PROPERTIES);
>         Person p = mapper.readValue("{ }", Person.class);
>         assertNotNull(p);
235d217
<     */
