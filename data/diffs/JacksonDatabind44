diff -r -x '*.config' -x '*git*' -x '*.md' -x '*.xml' d4j_buggy/JacksonDatabind44/src/main/java/com/fasterxml/jackson/databind/type/SimpleType.java d4j_patched/JacksonDatabind44/src/main/java/com/fasterxml/jackson/databind/type/SimpleType.java
131a132
>         if (!_class.isAssignableFrom(subclass)) {
137a139
>         }
138a141,150
>         Class<?> next = subclass.getSuperclass();
>         if (next == _class) { // straight up parent class? Great.
>             return new SimpleType(subclass, _bindings, this,
>                     _superInterfaces, _valueHandler, _typeHandler, _asStatic);
>         }
>         if ((next != null) && _class.isAssignableFrom(next)) {
>             JavaType superb = _narrow(next);
>             return new SimpleType(subclass, _bindings, superb,
>                     null, _valueHandler, _typeHandler, _asStatic);
>         }
139a152,163
>         Class<?>[] nextI = subclass.getInterfaces();
>         for (Class<?> iface : nextI) {
>             if (iface == _class) { // directly implemented
>                 return new SimpleType(subclass, _bindings, null,
>                         new JavaType[] { this }, _valueHandler, _typeHandler, _asStatic);
>             }
>             if (_class.isAssignableFrom(iface)) { // indirect, so recurse
>                 JavaType superb = _narrow(iface);
>                 return new SimpleType(subclass, _bindings, null,
>                         new JavaType[] { superb }, _valueHandler, _typeHandler, _asStatic);
>             }
>         }
140a165,166
>         throw new IllegalArgumentException("Internal error: Can not resolve sub-type for Class "+subclass.getName()+" to "
>                 +_class.getName());
