import matplotlib.pyplot as plt
# same_line_overlap = [0.9692101740294511, 0.7857142857142857, 0.5175438596491229, 1.0, 0.5555555555555556, 1.0, 0.29333333333333333, 0.5821812596006144, 0.3448275862068966, 0.8818770226537217, 1.0, 0.1529229578010066, 0.7674230145867099, 0.20155891792755617, 0.9973404255319149, 1.0, 0.5648464163822525, 0.328125, 0.5507692307692308, 0.388129141407021, 0.43680709534368073, 0.9291176470588235, 0.884095757288457, 0.775, 0.8556535685645549, 0.9068441064638784, 0.13134328358208955, 0.8391502276176024, 0.9091970802919708, 0.7755829903978052, 1.0, 0.5217391304347826, 0.9577060931899641, 0.6620689655172414, 0.9711751662971175, 0.8371810449574727, 0.3471613495056569, 0.05397727272727273, 0.9463198671831765, 1.0, 1.0, 0.3484848484848485, 0.6359223300970874, 0.2919849003599333, 0.5555555555555556, 0.8887995712754555, 0.5959252971137521, 0.8865803814713896, 0.7491200625733281, 0.16500553709856036, 0.47668393782383417, 0.05223880597014925, 0.40993608367228357, 1.0, 0.6238938053097345, 0.6215226939970717, 0.9890610756608933, 0.6564102564102564, 0.9375, 0.6832740213523132, 1.0, 0.24254247954688482, 0.5359537572254335, 1.0, 0.6159077468953282, 0.9615384615384616, 0.6405529953917051, 0.9130936358392617, 0.4184621099554235, 0.625, 0.9915626054674317, 0.8583569405099151, 0.9814385150812065, 0.847935847935848, 0.4974160206718346, 1.0, 0.46579804560260585, 0.5721566190180236, 0.9874768089053804, 0.28441094803649347, 0.7814407814407814, 0.4634146341463415, 0.9860305179454115, 1.0, 0.8633572159672467, 0.8443864229765013, 0.4171151776103337, 0.24579182411542425, 0.7867203219315896, 0.1951219512195122, 0.22220741135697147, 0.9294506154308015, 0.1591546258356696, 0.8719052744886975, 0.7604166666666666, 0.7435897435897436, 1.0, 0.5926660059464817, 0.33423048690971374, 0.550321199143469, 0.8903225806451613, 0.9722222222222222, 0.5858279651383099, 0.5598377281947262, 0.7692307692307693, 1.0, 1.0, 0.4671968190854871, 1.0, 0.7996108949416343, 0.3117661753684736, 0.8253343823760818, 0.7723577235772358, 0.9885480572597137, 1.0, 1.0, 0.43178807947019865, 0.6871557611808768, 0.8, 0.6670035371399696, 0.7439024390243902, 0.04452054794520548, 1.0, 0.9764150943396226, 0.9261083743842364, 0.43121019108280256, 0.8272394881170019, 0.19289340101522842, 1.0, 0.953360768175583, 0.5495495495495496, 0.9255236617532971, 0.8732993197278912, 0.5545424943015305, 0.25396085740913327, 0.0, 0.16623853211009174, 0.6962828649138713, 0.8888888888888888, 0.14827327327327328, 0.7390263367916999, 0.9620367580596565]
# ind_line_overlap = [0.8587915818058385, 0.3829787234042553, 0.1631578947368421, 0.20233463035019456, 0.05555555555555555, 0.31896551724137934, 0.2344213649851632, 0.6470588235294118, 0.0, 0.5987654320987654, 0.09455958549222798, 0.0, 0.7825793382849426, 0.832183908045977, 0.03247373447946514, 0.9816440542697525, 0.9888268156424581, 0.17993079584775087, 0.821062441752097, 0.5681818181818182, 0.64, 0.0, 0.8846381969157769, 0.8663338879645036, 0.7276936026936027, 0.0, 0.18789808917197454, 0.7569133034379671, 0.5835820895522388, 0.8378378378378378, 0.4272438803263826]
# neither_line_overlap = [0.997577519379845, 0.17652173913043478, 0.7419354838709677, 0.8722115997450606, 0.5413282369804109, 0.7409638554216867, 0.6716826265389877, 0.3333333333333333, 0.984313725490196, 0.016877637130801686, 0.8618381010346926, 0.0708215297450425, 0.47268408551068886, 0.03598484848484849, 0.9126123334366284, 0.21875, 0.027848101265822784, 0.2413793103448276, 0.9366852886405959, 0.6448197630451222, 0.9036363636363637, 0.9932584269662922, 0.013138686131386862, 0.5151515151515151, 0.22136786726021854, 0.43823915900131405, 0.26595744680851063, 0.6153846153846154, 0.9908306364617044, 0.1583198707592892, 0.14948162111215835, 0.26211873638344224, 0.49883076923076924, 0.5953667953667954, 0.03832752613240418, 0.0010460251046025104]

same_line_overlap = [0.9692101740294511, 0.7857142857142857, 0.997577519379845, 0.5175438596491229, 1.0, 0.5555555555555556, 1.0, 0.29333333333333333, 0.5821812596006144, 0.3448275862068966, 0.8818770226537217, 1.0, 0.1529229578010066, 0.7674230145867099, 0.20155891792755617, 0.9973404255319149, 1.0, 0.5648464163822525, 0.328125, 0.5507692307692308, 0.388129141407021, 0.43680709534368073, 0.9291176470588235, 0.884095757288457, 0.775, 0.8556535685645549, 0.9068441064638784, 0.13134328358208955, 0.8391502276176024, 0.9091970802919708, 0.7755829903978052, 1.0, 0.5217391304347826, 0.9577060931899641, 0.6620689655172414, 0.9711751662971175, 0.8371810449574727, 0.3471613495056569, 0.05397727272727273, 0.9463198671831765, 1.0, 1.0, 0.3484848484848485, 0.6359223300970874, 0.2919849003599333, 0.5555555555555556, 0.8887995712754555, 0.5959252971137521, 0.8865803814713896, 0.7491200625733281, 0.16500553709856036, 0.47668393782383417, 0.05223880597014925, 0.40993608367228357, 1.0, 0.6238938053097345, 0.6215226939970717, 0.9890610756608933, 0.6564102564102564, 0.9375, 0.6832740213523132, 1.0, 0.24254247954688482, 0.5359537572254335, 1.0, 0.6159077468953282, 0.9615384615384616, 0.6405529953917051, 0.9130936358392617, 0.4184621099554235, 0.625, 0.9915626054674317, 0.8583569405099151, 0.9814385150812065, 0.847935847935848, 0.4974160206718346, 1.0, 0.46579804560260585, 0.5721566190180236, 0.9874768089053804, 0.28441094803649347, 0.7814407814407814, 0.4634146341463415, 0.9860305179454115, 1.0, 0.8633572159672467, 0.8443864229765013, 0.4171151776103337, 0.24579182411542425, 0.7867203219315896, 0.1951219512195122, 0.22220741135697147, 0.9294506154308015, 0.1591546258356696, 0.8719052744886975, 0.7604166666666666, 0.7435897435897436, 1.0, 0.5926660059464817, 0.33423048690971374, 0.550321199143469, 0.8903225806451613, 0.9036363636363637, 0.9932584269662922, 0.9722222222222222, 0.5151515151515151, 0.5858279651383099, 0.5598377281947262, 0.7692307692307693, 1.0, 1.0, 0.4671968190854871, 1.0, 0.7996108949416343, 0.3117661753684736, 0.8253343823760818, 0.7723577235772358, 0.9885480572597137, 1.0, 1.0, 0.9908306364617044, 0.43178807947019865, 0.6871557611808768, 0.8, 0.6670035371399696, 0.7439024390243902, 0.04452054794520548, 1.0, 0.9764150943396226, 0.9261083743842364, 0.43121019108280256, 0.8272394881170019, 0.19289340101522842, 1.0, 0.953360768175583, 0.5495495495495496, 0.9255236617532971, 0.8732993197278912, 0.5545424943015305, 0.25396085740913327, 0.0, 0.16623853211009174, 0.6962828649138713, 0.8888888888888888, 0.03832752613240418, 0.14827327327327328, 0.7390263367916999, 0.9620367580596565]
ind_line_overlap = [0.8587915818058385, 0.3829787234042553, 0.1631578947368421, 0.20233463035019456, 0.05555555555555555, 0.31896551724137934, 0.2344213649851632, 0.6470588235294118, 0.0, 0.5987654320987654, 0.09455958549222798, 0.0, 0.7825793382849426, 0.832183908045977, 0.03247373447946514, 0.9816440542697525, 0.9888268156424581, 0.17993079584775087, 0.821062441752097, 0.5681818181818182, 0.64, 0.0, 0.8846381969157769, 0.8663338879645036, 0.7276936026936027, 0.0, 0.18789808917197454, 0.7569133034379671, 0.5835820895522388, 0.8378378378378378, 0.4272438803263826]
neither_line_overlap = [0.17652173913043478, 0.7419354838709677, 0.8722115997450606, 0.5413282369804109, 0.7409638554216867, 0.6716826265389877, 0.3333333333333333, 0.984313725490196, 0.016877637130801686, 0.8618381010346926, 0.0708215297450425, 0.47268408551068886, 0.03598484848484849, 0.9126123334366284, 0.21875, 0.027848101265822784, 0.2413793103448276, 0.9366852886405959, 0.6448197630451222, 0.013138686131386862, 0.22136786726021854, 0.43823915900131405, 0.26595744680851063, 0.6153846153846154, 0.1583198707592892, 0.14948162111215835, 0.26211873638344224, 0.49883076923076924, 0.5953667953667954, 0.0010460251046025104]


plt.rcParams.update({'font.size': 20})
# plt.rcParams.update({'font.family': 'serif'})

prop = {'linewidth':3}

bp = plt.boxplot([same_line_overlap, ind_line_overlap, neither_line_overlap], labels=["Same", "Independent", "Neither"],
	boxprops=prop,
	capprops=prop,
	whiskerprops=prop,
	flierprops=prop,
	medianprops=prop,
	meanprops=prop)

plt.ylabel("Percentage of lines covered by all failing tests",labelpad=15)
plt.yticks(ticks=[0.0, 0.2, 0.4, 0.6, 0.8, 1.0], labels=['0%', '20%', '40%', '60%', '80%', '100%'])
plt.xlabel("Failing test behavior",labelpad=15)

for medline in bp['medians']:
    linedata = medline.get_ydata()
    median = linedata[0]
    print(median)

# plt.title("Do the failing tests of multi-edit and multi-test bugs\nexecute the same lines of code?", pad=40, fontdict={'fontsize': "xx-large",})
plt.show()




import matplotlib.pyplot as plt
plt.rcParams.update({'font.size': 20})

plt.figure()
ax = plt.bar(["best case", "worst case", "single location"], [67, 13.5, 56])
# plt.title("All multi-location and multi-test:\nDistribution of coverage patterns")
plt.ylim(0, 100)
plt.xlabel("SBFL scenario")
plt.ylabel("Percentage of bugs localized within top 100")
plt.show()

def plot(num_disjoint, num_overlap, num_identical, maxy=100):
    sum_mchunk = num_disjoint + num_identical + num_overlap

    print(f"Total bugs with multiple tests & multiple chunks: {sum_mchunk}")
    print(f"Multitest/multichunk disjoint: {num_disjoint}")
    print(f"Multitest/multichunk identical: {num_identical}")
    print(f"Multitest/multichunk overlap: {num_overlap}")

    disjoint_percent = round(100 * num_disjoint / sum_mchunk)
    identical_percent = round(100 * num_identical / sum_mchunk)
    overlap_percent = round(100 * num_overlap / sum_mchunk)

    plt.figure()
    ax = plt.bar(["same", "independent", "neither"], [num_identical, num_disjoint, num_overlap])#, color='#e6b8afff')
    # plt.title("All multi-location and multi-test:\nDistribution of coverage patterns")
    plt.ylim(0, maxy)
    plt.xlabel("Behavior of failing tests")
    plt.ylabel("Number of patches")


    # Add this loop to add the annotations
    for p, percent, raw in zip(ax.patches, [identical_percent, disjoint_percent, overlap_percent], [num_identical, num_disjoint, num_overlap]):
        width, height = p.get_width(), p.get_height()
        x, y = p.get_xy()
        plt.annotate(f'{raw} ({percent}%)', (x + (width/2) - 0.25, y + height + 0.75))

    plt.show()

independent = 31 + 2
same = 148 + 5
neither = 209 + 18 - independent - same
plot(independent, neither, same, maxy=160)
